/*! For license information please see index.js.LICENSE.txt */
var __webpack_modules__={"./src/advanced-status-phone-v2/components/button-manager.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHECKPOINT_BUTTON_CLASS: () => (/* binding */ CHECKPOINT_BUTTON_CLASS),\n/* harmony export */   SSP_LOAD_CHECKPOINT_EVENT: () => (/* binding */ SSP_LOAD_CHECKPOINT_EVENT),\n/* harmony export */   SSP_UPDATE_STATUS_EVENT: () => (/* binding */ SSP_UPDATE_STATUS_EVENT),\n/* harmony export */   UPDATE_BUTTON_CLASS: () => (/* binding */ UPDATE_BUTTON_CLASS),\n/* harmony export */   createButton: () => (/* binding */ createButton),\n/* harmony export */   injectButtonForMessage: () => (/* binding */ injectButtonForMessage),\n/* harmony export */   processAllMessagesForInjection: () => (/* binding */ processAllMessagesForInjection)\n/* harmony export */ });\n// button-manager.ts\n// v2.1 - Adopts the event delegation pattern from the legacy version for robustness.\n// This module is responsible for finding directives in messages and injecting corresponding buttons.\n// The buttons themselves are simple data containers; all click logic is handled by a single\n// delegated event handler in index.ts.\n// --- Constants and Type Declarations ---\nconst SCRIPT_NAME_INJECTOR = 'SSP-ÊåâÈíÆÊ≥®ÂÖ•Âô®';\nconst UPDATE_BUTTON_CLASS = 'ssp-update-status-button';\nconst CHECKPOINT_BUTTON_CLASS = 'ssp-checkpoint-button';\n// Custom event names for communication with index.ts\nconst SSP_UPDATE_STATUS_EVENT = 'ssp_update_status_event';\nconst SSP_LOAD_CHECKPOINT_EVENT = 'ssp_load_checkpoint_event';\n// Regex to find our directives\nconst updateRegex = /<update_status>([\\s\\S]+?)<\\/update_status>/gi;\nconst checkpointRegex = /<current_status>([\\s\\S]+?)<\\/current_status>/gi;\nconst parent_$ = parent.$;\n/**\n * Creates a button element with all necessary data attributes for the delegated event handler.\n * It does NOT attach any 'click' event handlers itself.\n */\nfunction createButton(messageId, directiveCoreText, characterName, type, blockIndex) {\n    let buttonText = '';\n    let buttonClass = '';\n    let eventType = '';\n    let gradientBg = 'linear-gradient(135deg, #87CEEB, #00BFFF)'; // Default for update button\n    if (type === 'update') {\n        buttonText = `‚ú® Êõ¥Êñ∞ ${characterName} Áä∂ÊÄÅ`;\n        buttonClass = UPDATE_BUTTON_CLASS;\n        eventType = SSP_UPDATE_STATUS_EVENT;\n    }\n    else if (type === 'checkpoint') {\n        buttonText = `üíæ ${characterName} Ê£ÄÊü•ÁÇπ`;\n        buttonClass = CHECKPOINT_BUTTON_CLASS;\n        eventType = SSP_LOAD_CHECKPOINT_EVENT;\n        gradientBg = 'linear-gradient(135deg, #a8e063, #56ab2f)'; // Green for checkpoint\n    }\n    else {\n        return null; // Should not happen\n    }\n    const $button = parent_$('<button>', {\n        class: `${buttonClass} ssp-juus-style-button`,\n        html: `<span class=\"ssp-button-text\">${buttonText}</span>`\n    }).css({\n        'display': 'inline-block',\n        'background': gradientBg,\n        'color': 'white', 'border': 'none', 'border-radius': '10px',\n        'padding': '10px 18px', 'font-size': '15px', 'font-weight': '500',\n        'cursor': 'pointer', 'transition': 'all 0.25s ease-out',\n        'box-shadow': '0 2px 5px rgba(0,0,0,0.1)',\n        'user-select': 'none',\n        'margin-right': '5px',\n        'margin-bottom': '5px'\n    }).hover(function () { if (!parent_$(this).data('ssp-processed-by-main') && !parent_$(this).data('ssp-processing'))\n        parent_$(this).css({ 'transform': 'translateY(-2px)', 'box-shadow': `0 4px 10px ${type === 'update' ? 'rgba(0, 150, 255, 0.3)' : 'rgba(86, 171, 47, 0.3)'}` }); }, function () { if (!parent_$(this).data('ssp-processed-by-main') && !parent_$(this).data('ssp-processing'))\n        parent_$(this).css({ 'transform': 'translateY(0)', 'box-shadow': '0 2px 5px rgba(0,0,0,0.1)' }); }).on('mousedown', function () {\n        if (!parent_$(this).data('ssp-processed-by-main') && !parent_$(this).data('ssp-processing'))\n            parent_$(this).css({ 'transform': 'translateY(1px)', 'opacity': '0.9' });\n    }).on('mouseup mouseleave', function () {\n        if (!parent_$(this).data('ssp-processed-by-main') && !parent_$(this).data('ssp-processing')) {\n            parent_$(this).css({ 'transform': 'translateY(0)', 'opacity': '1' });\n            if (!parent_$(this).is(':hover')) {\n                parent_$(this).css({ 'box-shadow': '0 2px 5px rgba(0,0,0,0.1)' });\n            }\n        }\n    });\n    // Store all necessary info in data attributes for the central handler\n    $button.data('ssp-message-id', messageId);\n    $button.data('ssp-raw-directive', directiveCoreText);\n    $button.data('ssp-event-type', eventType);\n    $button.data('ssp-block-index', blockIndex); // Add the block index\n    return $button;\n}\n/**\n * Finds directives in a message and injects the corresponding buttons.\n */\nfunction injectButtonForMessage(messageId) {\n    try {\n        const messageDataArray = getChatMessages(messageId);\n        if (!messageDataArray || messageDataArray.length === 0)\n            return;\n        const messageData = messageDataArray[0];\n        if (!messageData || !messageData.message)\n            return;\n        const $messageDom = retrieveDisplayedMessage(messageId);\n        if (!$messageDom || $messageDom.length === 0)\n            return;\n        // Clean up any previously injected buttons for this message\n        $messageDom.find('.ssp-buttons-wrapper').remove();\n        const rawMessageText = messageData.message;\n        const updateMatches = Array.from(rawMessageText.matchAll(updateRegex));\n        const checkpointMatches = Array.from(rawMessageText.matchAll(checkpointRegex));\n        if (updateMatches.length === 0 && checkpointMatches.length === 0) {\n            return;\n        }\n        const $allButtonsWrapper = parent_$('<div>', { class: 'ssp-buttons-wrapper' })\n            .css({ 'text-align': 'center', 'margin-top': '5px', 'margin-bottom': '5px' });\n        // Process <update_status> blocks\n        updateMatches.forEach((match, index) => {\n            const directiveCoreText = match[1].trim();\n            const characterName = directiveCoreText.split('\\n')[0].trim();\n            const $button = createButton(messageId, directiveCoreText, characterName, 'update', index);\n            if ($button)\n                $allButtonsWrapper.append($button);\n        });\n        // Process <current_status> blocks\n        checkpointMatches.forEach((match, index) => {\n            const directiveCoreText = match[1].trim();\n            const characterName = directiveCoreText.split('\\n')[0].trim();\n            const $button = createButton(messageId, directiveCoreText, characterName, 'checkpoint', index);\n            if ($button)\n                $allButtonsWrapper.append($button);\n        });\n        if ($allButtonsWrapper.children().length > 0) {\n            $messageDom.append($allButtonsWrapper);\n        }\n    }\n    catch (error) {\n        console.error(`${SCRIPT_NAME_INJECTOR}: Error in injectButtonForMessage for msg ${messageId}:`, error);\n    }\n}\n/**\n * Iterates over all visible character messages and calls injectButtonForMessage.\n */\nfunction processAllMessagesForInjection() {\n    parent_$('#chat .mes[is_user=\"false\"][is_system=\"false\"]').each(function () {\n        const messageId = Number(parent_$(this).attr('mesid'));\n        if (!isNaN(messageId)) {\n            injectButtonForMessage(messageId);\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/advanced-status-phone-v2/components/button-manager.ts\n")},"./src/advanced-status-phone-v2/data/ai-parser.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyChanges: () => (/* binding */ applyChanges),\n/* harmony export */   formatCurrentStatus: () => (/* binding */ formatCurrentStatus),\n/* harmony export */   parseUpdateDirective: () => (/* binding */ parseUpdateDirective)\n/* harmony export */ });\n/* harmony import */ var _logic_status_data_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../logic/status-data-manager */ \"./src/advanced-status-phone-v2/logic/status-data-manager.ts\");\n// ai-parser.ts\n// v2.2 \"Context-Aware\" Parser\n// Handles parsing AI directives with hierarchical context and applying changes.\n\n/**\n * Translates the AI's indented format into a list of fully qualified paths.\n * This is the core of the new context-aware parsing logic.\n */\nfunction translateIndentedToFullPath(rawText) {\n    const rawLines = rawText.trim().split('\\n').map(line => line.trimEnd());\n    if (rawLines.length === 0) {\n        throw new Error('Invalid directive: Cannot be empty.');\n    }\n    const characterName = rawLines.shift();\n    const translatedLines = [];\n    const pathStack = [];\n    for (const line of rawLines) {\n        const indentMatch = line.match(/^(-+)\\s*(.*)/);\n        if (!indentMatch) {\n            // Lines without indentation are ignored as they are not valid data points.\n            continue;\n        }\n        const indentLevel = indentMatch[1].length;\n        let content = indentMatch[2].trim();\n        // Adjust the path stack based on the current indent level\n        // The level is indentLevel - 1 because a single '-' is level 0 in the stack.\n        pathStack.length = indentLevel - 1;\n        const parts = content.split('|');\n        const currentKey = parts[0].trim();\n        pathStack.push(currentKey);\n        // If there is a value part, it's a data line.\n        if (parts.length > 1) {\n            const fullPath = pathStack.join('/');\n            // Reconstruct the line with the full path for the next stage of parsing.\n            translatedLines.push(`${fullPath}|${parts.slice(1).join('|')}`);\n            // A data line cannot be a parent, so pop it from the stack.\n            pathStack.pop();\n        }\n    }\n    return { characterName, lines: translatedLines };\n}\n/**\n * Parses the raw text of an <update_status> or <current_status> directive.\n * It now uses the translation function to handle hierarchical formats.\n */\nfunction parseUpdateDirective(rawText) {\n    const { characterName, lines } = translateIndentedToFullPath(rawText);\n    const changes = [];\n    for (const line of lines) {\n        const parts = line.split('|').map(part => part.trim());\n        if (parts.length < 2)\n            continue; // Should not happen with new logic, but good for safety\n        const path = parts[0];\n        const value = parts[1];\n        const note = parts[2] || '';\n        changes.push({ path, value, note });\n    }\n    return { characterName, changes };\n}\n/**\n * Applies parsed changes to a character's data object.\n * This function remains largely the same, as the parsing stage now provides the correct full paths.\n */\nfunction applyChanges(characterData, changes, preset, isCheckpoint = false) {\n    const changedKeys = [];\n    for (const change of changes) {\n        const presetItem = (0,_logic_status_data_manager__WEBPACK_IMPORTED_MODULE_0__.findPresetByPath)(change.path, preset);\n        if (!presetItem) {\n            console.warn(`AI Parser: Preset item not found for path \"${change.path}\". Skipping.`);\n            continue;\n        }\n        // Extract the final key from the path for highlighting\n        const pathParts = change.path.split('/');\n        const finalKey = pathParts[pathParts.length - 1];\n        changedKeys.push(finalKey);\n        if (presetItem.type === 'numeric' || presetItem.type === 'progress-bar') {\n            const currentValue = (0,_logic_status_data_manager__WEBPACK_IMPORTED_MODULE_0__.getValueByPath)(characterData, change.path) || 0;\n            let newValueStr = String(change.value);\n            let newValue;\n            if (isCheckpoint || (!newValueStr.startsWith('+') && !newValueStr.startsWith('-'))) {\n                newValue = parseFloat(newValueStr);\n            }\n            else {\n                newValue = currentValue + parseFloat(newValueStr);\n            }\n            if (typeof presetItem.min !== 'undefined') {\n                newValue = Math.max(presetItem.min, newValue);\n            }\n            if (typeof presetItem.max !== 'undefined') {\n                newValue = Math.min(presetItem.max, newValue);\n            }\n            (0,_logic_status_data_manager__WEBPACK_IMPORTED_MODULE_0__.setValueByPath)(characterData, change.path, newValue, isCheckpoint ? '' : change.note);\n        }\n        else {\n            (0,_logic_status_data_manager__WEBPACK_IMPORTED_MODULE_0__.setValueByPath)(characterData, change.path, change.value, isCheckpoint ? '' : change.note);\n        }\n    }\n    return changedKeys;\n}\n/**\n * Formats the current character data into a <current_status> block string\n * with AI-friendly indentation.\n */\nfunction formatCurrentStatus(characterName, data, preset) {\n    let content = `${characterName}\\n`;\n    function traverse(presetNode, dataNode, level) {\n        const lines = [];\n        const indent = '-'.repeat(level);\n        for (const key in presetNode) {\n            const currentPreset = presetNode[key];\n            const currentData = dataNode ? dataNode[key] : undefined;\n            if (currentPreset.items) { // It's an expandable sub-category\n                lines.push(`${indent}${key}`); // Use the key, not the label\n                lines.push(...traverse(currentPreset.items, currentData, level + 1));\n            }\n            else { // It's a concrete item\n                const value = currentData?.value ?? currentPreset.defaultValue;\n                const note = currentData?.note;\n                let line = `${indent}${key}|${value}`; // Use the key, not the label\n                if (note) {\n                    line += `|${note}`;\n                }\n                lines.push(line);\n            }\n        }\n        return lines;\n    }\n    // Start traversal from the root of the preset to maintain order\n    for (const categoryKey in preset) {\n        content += `-${categoryKey}\\n`;\n        content += traverse(preset[categoryKey], data[categoryKey], 2).join('\\n') + '\\n';\n    }\n    return `<current_status>\\n${content.trim()}\\n</current_status>`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/advanced-status-phone-v2/data/ai-parser.ts\n")},"./src/advanced-status-phone-v2/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_button_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/button-manager */ \"./src/advanced-status-phone-v2/components/button-manager.ts\");\n/* harmony import */ var _ui_ui_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ui/ui-manager */ \"./src/advanced-status-phone-v2/ui/ui-manager.ts\");\n/* harmony import */ var _logic_status_data_manager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logic/status-data-manager */ \"./src/advanced-status-phone-v2/logic/status-data-manager.ts\");\n/* harmony import */ var _data_ai_parser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data/ai-parser */ \"./src/advanced-status-phone-v2/data/ai-parser.ts\");\n/* harmony import */ var _preset_default_default_preset__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./preset/default/default-preset */ \"./src/advanced-status-phone-v2/preset/default/default-preset.ts\");\n// index.ts\n// v2.1 \"Browser-Page\" Architecture\n// This is the \"Browser\" part, handling the UI frame, events, and module coordination.\n\n\n\n\n\nconst SCRIPT_NAME = 'È´òÁ∫ßÁä∂ÊÄÅÊ†è-v2.1';\nlet isCoreInitialized = false;\n/**\n * Shows a confirmation modal inside the iframe and returns a promise that resolves with the user's choice.\n */\nfunction confirmAction(message) {\n    return new Promise((resolve) => {\n        const iframeDoc = parent.$('#ssp-content-iframe')[0].contentWindow.document;\n        const $modal = parent.$(iframeDoc).find('#ssp-confirm-modal');\n        $modal.find('#ssp-confirm-message').text(message);\n        $modal.find('#ssp-confirm-yes').off('click').on('click', () => {\n            $modal.addClass('ssp-hidden');\n            resolve(true);\n        });\n        $modal.find('#ssp-confirm-no').off('click').on('click', () => {\n            $modal.addClass('ssp-hidden');\n            resolve(false);\n        });\n        $modal.removeClass('ssp-hidden');\n    });\n}\n/**\n * Publishes a custom event to the parent document to update the UI.\n * This is the core of the new decoupled architecture.\n */\nfunction publishViewUpdate(view, data = {}) {\n    const event = new CustomEvent('ssp:view:update', {\n        detail: {\n            view,\n            charactersData: _logic_status_data_manager__WEBPACK_IMPORTED_MODULE_2__.charactersData,\n            statusPreset: _preset_default_default_preset__WEBPACK_IMPORTED_MODULE_4__.statusPreset,\n            data\n        }\n    });\n    parent.document.dispatchEvent(event);\n}\n/**\n * Handles the update request from a button click.\n */\nasync function handleUpdateStatusRequest(rawDirective, buttonElement, messageId, blockIndex) {\n    const parent_toastr = parent.toastr;\n    const parent_$ = parent.$;\n    const $button = parent_$(buttonElement);\n    try {\n        const parsedData = (0,_data_ai_parser__WEBPACK_IMPORTED_MODULE_3__.parseUpdateDirective)(rawDirective);\n        const charName = parsedData.characterName;\n        let isNewCharacter = false;\n        // Check if character exists, if not, ask for confirmation.\n        if (!_logic_status_data_manager__WEBPACK_IMPORTED_MODULE_2__.charactersData[charName]) {\n            const userConfirmed = await confirmAction(`ËßíËâ≤ \"${charName}\" ‰∏çÂ≠òÂú®„ÄÇÊÇ®ÊÉ≥‰∏∫ËØ•ËßíËâ≤ÂàõÂª∫Êñ∞ÁöÑÁä∂ÊÄÅÊï∞ÊçÆÂêóÔºü`);\n            if (!userConfirmed) {\n                parent_toastr.info(`Â∑≤ÂèñÊ∂à‰∏∫ \"${charName}\" ÂàõÂª∫Êñ∞Áä∂ÊÄÅ„ÄÇ`);\n                $button.find('.ssp-button-text').text('‚ú® Êõ¥Êñ∞Áä∂ÊÄÅ'); // Restore button text\n                $button.removeData('ssp-processing');\n                $button.css({ 'cursor': 'pointer' });\n                return;\n            }\n            isNewCharacter = true;\n        }\n        const charData = (0,_logic_status_data_manager__WEBPACK_IMPORTED_MODULE_2__.getOrCreateChar)(charName, _preset_default_default_preset__WEBPACK_IMPORTED_MODULE_4__.statusPreset);\n        const changedKeys = (0,_data_ai_parser__WEBPACK_IMPORTED_MODULE_3__.applyChanges)(charData, parsedData.changes, _preset_default_default_preset__WEBPACK_IMPORTED_MODULE_4__.statusPreset);\n        // After creating/updating, switch to the detail view for the character\n        const viewUpdateData = { characterName: charName };\n        // Only do a partial update and pass changedKeys if it's an existing character.\n        if (!isNewCharacter) {\n            viewUpdateData.changedKeys = changedKeys;\n            viewUpdateData.partial = true;\n        }\n        // For new characters, do a full render.\n        publishViewUpdate('character_detail', viewUpdateData);\n        const messages = getChatMessages(messageId);\n        if (messages && messages.length > 0) {\n            let currentMessageText = messages[0].message;\n            const newCurrentStatusBlock = (0,_data_ai_parser__WEBPACK_IMPORTED_MODULE_3__.formatCurrentStatus)(charName, charData, _preset_default_default_preset__WEBPACK_IMPORTED_MODULE_4__.statusPreset);\n            // New, robust replacement logic using the block index\n            const updateRegex = /<update_status>[\\s\\S]+?<\\/update_status>/gi;\n            let matchIndex = 0;\n            const finalMessageText = currentMessageText.replace(updateRegex, (match) => {\n                if (matchIndex === blockIndex) {\n                    matchIndex++;\n                    return newCurrentStatusBlock;\n                }\n                matchIndex++;\n                return match;\n            });\n            await setChatMessages([{ message_id: messageId, message: finalMessageText }], { refresh: 'affected' });\n            // Explicitly re-render the button for the updated message.\n            (0,_components_button_manager__WEBPACK_IMPORTED_MODULE_0__.injectButtonForMessage)(messageId);\n        }\n        parent_toastr.success(`ËßíËâ≤ \"${charName}\" ÁöÑÁä∂ÊÄÅÂ∑≤Êõ¥Êñ∞Âπ∂Â∑≤ÂàõÂª∫Ê£ÄÊü•ÁÇπ„ÄÇ`);\n        // No need to call update again, it's done above.\n        $button.find('.ssp-button-text').text('‚úÖ Â∑≤Â∫îÁî®');\n        $button.data('ssp-processed-by-main', true).css({\n            'background': 'linear-gradient(135deg, #a8e063, #56ab2f)',\n            'cursor': 'default'\n        });\n    }\n    catch (error) {\n        console.error(`${SCRIPT_NAME}: Error processing update request:`, error);\n        parent_toastr.error('Áä∂ÊÄÅÊõ¥Êñ∞Â§±Ë¥•ÔºåËØ∑Êü•ÁúãÊéßÂà∂Âè∞„ÄÇ');\n        $button.find('.ssp-button-text').text('‚ùå Â§±Ë¥•');\n        $button.data('ssp-processed-by-main', true).css({\n            'background': 'linear-gradient(135deg, #ff6b6b, #d63031)',\n            'cursor': 'default'\n        });\n    }\n    finally {\n        $button.removeData('ssp-processing');\n    }\n}\nasync function handleLoadCheckpointRequest(rawDirective, buttonElement, messageId) {\n    const parent_toastr = parent.toastr;\n    const parent_$ = parent.$;\n    const $button = parent_$(buttonElement);\n    try {\n        const parsedData = (0,_data_ai_parser__WEBPACK_IMPORTED_MODULE_3__.parseUpdateDirective)(rawDirective); // Re-use the same parser\n        const charName = parsedData.characterName;\n        // Check if character exists, if not, ask for confirmation.\n        if (!_logic_status_data_manager__WEBPACK_IMPORTED_MODULE_2__.charactersData[charName]) {\n            const userConfirmed = await confirmAction(`ËßíËâ≤ \"${charName}\" ‰∏çÂ≠òÂú®„ÄÇÊÇ®ÊÉ≥Ê†πÊçÆÊ≠§Ê£ÄÊü•ÁÇπÂàõÂª∫Âπ∂Âä†ËΩΩËØ•ËßíËâ≤ÁöÑÁä∂ÊÄÅÂêóÔºü`);\n            if (!userConfirmed) {\n                parent_toastr.info(`Â∑≤ÂèñÊ∂à‰∏∫ \"${charName}\" Âä†ËΩΩÊ£ÄÊü•ÁÇπ„ÄÇ`);\n                $button.find('.ssp-button-text').text('üîÑ Âä†ËΩΩÊ£ÄÊü•ÁÇπ'); // Restore button text\n                $button.removeData('ssp-processing');\n                $button.css({ 'cursor': 'pointer' });\n                return;\n            }\n        }\n        // This just re-applies the state from the message to the current character data\n        const charData = (0,_logic_status_data_manager__WEBPACK_IMPORTED_MODULE_2__.getOrCreateChar)(charName, _preset_default_default_preset__WEBPACK_IMPORTED_MODULE_4__.statusPreset);\n        // For checkpoints, we do a full value replacement, not relative.\n        (0,_data_ai_parser__WEBPACK_IMPORTED_MODULE_3__.applyChanges)(charData, parsedData.changes, _preset_default_default_preset__WEBPACK_IMPORTED_MODULE_4__.statusPreset, true);\n        parent_toastr.success(`Â∑≤‰ªéÊ∂àÊÅØ‰∏≠Âä†ËΩΩËßíËâ≤ \"${charName}\" ÁöÑÊ£ÄÊü•ÁÇπÊï∞ÊçÆ„ÄÇ`);\n        // Ensure we switch to the detail view after loading a checkpoint.\n        // A full render is better here since the character might be new.\n        publishViewUpdate('character_detail', { characterName: charName });\n        $button.find('.ssp-button-text').text('‚úÖ Â∑≤Âä†ËΩΩ');\n        $button.data('ssp-processed-by-main', true).css({\n            'background': 'linear-gradient(135deg, #6ab1d7, #0095e0)',\n            'cursor': 'default'\n        });\n    }\n    catch (error) {\n        console.error(`${SCRIPT_NAME}: Error processing checkpoint load request:`, error);\n        parent_toastr.error('Ê£ÄÊü•ÁÇπÂä†ËΩΩÂ§±Ë¥•ÔºåËØ∑Êü•ÁúãÊéßÂà∂Âè∞„ÄÇ');\n        $button.find('.ssp-button-text').text('‚ùå Â§±Ë¥•');\n        $button.data('ssp-processed-by-main', true).css({\n            'background': 'linear-gradient(135deg, #ff6b6b, #d63031)',\n            'cursor': 'default'\n        });\n    }\n    finally {\n        $button.removeData('ssp-processing');\n    }\n}\n/**\n * Sets up the drag functionality for the phone container.\n */\nfunction makeDraggable() {\n    const parent_$ = parent.$;\n    const $container = parent_$('#ssp-phone-container');\n    const $dragHandle = parent_$('#ssp-top-bar');\n    let isDragging = false;\n    let offset = { x: 0, y: 0 };\n    $dragHandle.on('mousedown', function (e) {\n        // Prevent dragging if the target is an interactive element like the minimize button\n        if (parent_$(e.target).is('#ssp-minimize-btn')) {\n            return;\n        }\n        isDragging = true;\n        offset = {\n            x: e.clientX - $container.offset().left,\n            y: e.clientY - $container.offset().top\n        };\n        $container.css('cursor', 'grabbing');\n    });\n    parent_$(parent.document).on('mousemove', function (e) {\n        if (isDragging) {\n            $container.css({\n                top: e.clientY - offset.y,\n                left: e.clientX - offset.x\n            });\n        }\n    }).on('mouseup', function () {\n        isDragging = false;\n        $container.css('cursor', 'default');\n    });\n}\n/**\n * Initializes core functionalities, event bindings, etc.\n */\nfunction initializeCore() {\n    if (isCoreInitialized)\n        return;\n    const parent_$ = parent.$;\n    (0,_ui_ui_manager__WEBPACK_IMPORTED_MODULE_1__.injectUI)();\n    setTimeout(() => {\n        publishViewUpdate('character_list');\n        makeDraggable();\n        // Minimize/Restore Logic\n        const $container = parent_$('#ssp-phone-container');\n        const $restoreBtn = parent_$('body').append('<button id=\"ssp-restore-btn\" class=\"ssp-hidden\">üì±</button>').find('#ssp-restore-btn');\n        $restoreBtn.css({\n            position: 'fixed', bottom: '15px', left: '15px', zIndex: 949, width: '48px', height: '48px',\n            borderRadius: '24px', border: 'none', background: 'rgba(255, 255, 255, 0.8)',\n            color: '#007aff', fontSize: '24px', cursor: 'pointer',\n            boxShadow: '0 3px 10px rgba(0,0,0,0.15), 0 1px 3px rgba(0,0,0,0.1)',\n            backdropFilter: 'blur(8px)', WebkitBackdropFilter: 'blur(8px)',\n            display: 'none', alignItems: 'center', justifyContent: 'center',\n            transition: 'transform 0.2s ease, background-color 0.2s ease'\n        }).on('mouseenter', () => $restoreBtn.css({ background: 'rgba(255, 255, 255, 0.95)', transform: 'scale(1.05)' }))\n            .on('mouseleave', () => $restoreBtn.css({ background: 'rgba(255, 255, 255, 0.8)', transform: 'scale(1)' }));\n        // Use a direct, non-delegated event handler for the minimize button to avoid conflicts.\n        parent_$('#ssp-minimize-btn').on('click', (e) => {\n            e.stopPropagation(); // Crucially, stop the event from bubbling up to the drag handler.\n            $container.hide();\n            $restoreBtn.show();\n        });\n        $restoreBtn.on('click', () => {\n            $container.show();\n            $restoreBtn.hide();\n        });\n    }, 200); // A bit more delay to ensure UI is fully ready\n    parent.ssp_messenger = {\n        requestDeletion: (characterName) => {\n            const iframeDoc = parent_$('#ssp-content-iframe')[0].contentWindow.document;\n            const $modal = parent_$(iframeDoc).find('#ssp-confirm-modal');\n            $modal.find('#ssp-confirm-message').text(`Á°ÆÂÆöË¶ÅÂà†Èô§ËßíËâ≤ \"${characterName}\" ÁöÑÊâÄÊúâÁä∂ÊÄÅÊï∞ÊçÆÂêóÔºüÊ≠§Êìç‰Ωú‰∏çÂèØÈÄÜ„ÄÇ`);\n            $modal.find('#ssp-confirm-yes').off('click').on('click', () => {\n                (0,_logic_status_data_manager__WEBPACK_IMPORTED_MODULE_2__.deleteChar)(characterName);\n                parent.toastr.success(`ËßíËâ≤ \"${characterName}\" Â∑≤Ë¢´Âà†Èô§„ÄÇ`);\n                publishViewUpdate('character_list');\n                $modal.addClass('ssp-hidden');\n            });\n            $modal.find('#ssp-confirm-no').off('click').on('click', () => $modal.addClass('ssp-hidden'));\n            $modal.removeClass('ssp-hidden');\n        }\n    };\n    // Centralized event handler for all injected buttons\n    async function handleInjectedButtonClick(e) {\n        e.stopPropagation();\n        const $button = parent_$(this);\n        if ($button.data('ssp-processed-by-main') || $button.data('ssp-processing')) {\n            return;\n        }\n        $button.data('ssp-processing', true);\n        $button.find('.ssp-button-text').text('‚è≥ Â§ÑÁêÜ‰∏≠...');\n        $button.css({ 'cursor': 'wait' });\n        const messageId = $button.data('ssp-message-id');\n        const rawDirective = $button.data('ssp-raw-directive');\n        const eventType = $button.data('ssp-event-type');\n        const blockIndex = $button.data('ssp-block-index'); // Get the block index\n        try {\n            // Use the global eventEmit, which is now correctly typed\n            await eventEmit(eventType, rawDirective, this, messageId, blockIndex);\n        }\n        catch (error) {\n            console.error(`${SCRIPT_NAME}: Error emitting event '${eventType}':`, error);\n            $button.find('.ssp-button-text').text('‚ùå ‰∫ã‰ª∂ÂèëÈÄÅÂ§±Ë¥•');\n            $button.data('ssp-processed-by-main', true).css({\n                'background': 'linear-gradient(135deg, #ff6b6b, #d63031)',\n                'cursor': 'default'\n            });\n            $button.removeData('ssp-processing');\n        }\n    }\n    // Set up delegated event listeners on the parent body\n    const eventTarget = parent_$(parent.document.body);\n    eventTarget.off('click.ssp').on('click.ssp', `.${_components_button_manager__WEBPACK_IMPORTED_MODULE_0__.UPDATE_BUTTON_CLASS}, .${_components_button_manager__WEBPACK_IMPORTED_MODULE_0__.CHECKPOINT_BUTTON_CLASS}`, handleInjectedButtonClick);\n    // Listen for events emitted by the button handler\n    eventOn(_components_button_manager__WEBPACK_IMPORTED_MODULE_0__.SSP_UPDATE_STATUS_EVENT, (rawDirective, buttonElement, messageId, blockIndex) => handleUpdateStatusRequest(rawDirective, buttonElement, messageId, blockIndex));\n    eventOn(_components_button_manager__WEBPACK_IMPORTED_MODULE_0__.SSP_LOAD_CHECKPOINT_EVENT, (rawDirective, buttonElement, messageId, blockIndex) => handleLoadCheckpointRequest(rawDirective, buttonElement, messageId) // Checkpoint doesn't need index\n    );\n    // A comprehensive set of events that should trigger a re-scan of the chat for button injection.\n    const CHAT_REFRESH_EVENTS = [\n        tavern_events.MESSAGE_SWIPED,\n        //tavern_events.CHARACTER_MESSAGE_RENDERED,\n        tavern_events.MESSAGE_RECEIVED,\n        tavern_events.MESSAGE_EDITED,\n        tavern_events.MESSAGE_DELETED,\n        tavern_events.MESSAGE_UPDATED,\n        tavern_events.CHAT_CHANGED,\n        tavern_events.CHAT_CLEARED,\n        tavern_events.CHAT_LOADED,\n        tavern_events.MESSAGE_RENDERED, // Keep this for individual message rendering\n    ];\n    // A debounced function to process all messages.\n    // This prevents the function from running too many times in quick succession.\n    let refreshTimeout;\n    const debouncedRefresh = () => {\n        clearTimeout(refreshTimeout);\n        refreshTimeout = setTimeout(_components_button_manager__WEBPACK_IMPORTED_MODULE_0__.processAllMessagesForInjection, 200);\n    };\n    // Bind the debounced refresh function to all relevant events.\n    CHAT_REFRESH_EVENTS.forEach(eventName => {\n        eventOn(eventName, debouncedRefresh);\n    });\n    isCoreInitialized = true;\n    console.log(`${SCRIPT_NAME}: Core initialized.`);\n}\n// Script entry point\nparent.$(() => {\n    setTimeout(() => {\n        try {\n            const toastr = parent.toastr;\n            if (!toastr || typeof eventOn !== 'function' || typeof tavern_events !== 'object') {\n                console.error(`${SCRIPT_NAME}: Missing critical APIs.`);\n                return;\n            }\n            toastr.success('È´òÁ∫ßÁä∂ÊÄÅÊ†èv2.1Â∑≤Âä†ËΩΩÔºÅ', 'Âä†ËΩΩÊàêÂäü');\n            initializeCore();\n            (0,_components_button_manager__WEBPACK_IMPORTED_MODULE_0__.processAllMessagesForInjection)();\n        }\n        catch (error) {\n            console.error(`${SCRIPT_NAME}: A critical error occurred during initialization:`, error);\n            if (parent.toastr) {\n                parent.toastr.error('È´òÁ∫ßÁä∂ÊÄÅÊ†èËÑöÊú¨ÂàùÂßãÂåñÊó∂ÂèëÁîü‰∏•ÈáçÈîôËØØ„ÄÇ');\n            }\n        }\n    }, 500);\n});\n// Unload logic removed as it was causing conflicts with SillyTavern's chat switching events.\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LXN0YXR1cy1waG9uZS12Mi9pbmRleC50cz8iXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW5kZXgudHNcclxuLy8gdjIuMSBcIkJyb3dzZXItUGFnZVwiIEFyY2hpdGVjdHVyZVxyXG4vLyBUaGlzIGlzIHRoZSBcIkJyb3dzZXJcIiBwYXJ0LCBoYW5kbGluZyB0aGUgVUkgZnJhbWUsIGV2ZW50cywgYW5kIG1vZHVsZSBjb29yZGluYXRpb24uXHJcblxyXG5pbXBvcnQge1xyXG4gICAgaW5qZWN0QnV0dG9uRm9yTWVzc2FnZSxcclxuICAgIHByb2Nlc3NBbGxNZXNzYWdlc0ZvckluamVjdGlvbixcclxuICAgIFNTUF9VUERBVEVfU1RBVFVTX0VWRU5ULFxyXG4gICAgU1NQX0xPQURfQ0hFQ0tQT0lOVF9FVkVOVCxcclxuICAgIFVQREFURV9CVVRUT05fQ0xBU1MsXHJcbiAgICBDSEVDS1BPSU5UX0JVVFRPTl9DTEFTU1xyXG59IGZyb20gJy4vY29tcG9uZW50cy9idXR0b24tbWFuYWdlcic7XHJcbmltcG9ydCB7IGluamVjdFVJIH0gZnJvbSAnLi91aS91aS1tYW5hZ2VyJztcclxuaW1wb3J0IHsgZ2V0T3JDcmVhdGVDaGFyLCBjaGFyYWN0ZXJzRGF0YSwgZGVsZXRlQ2hhciB9IGZyb20gJy4vbG9naWMvc3RhdHVzLWRhdGEtbWFuYWdlcic7XHJcbmltcG9ydCB7IHBhcnNlVXBkYXRlRGlyZWN0aXZlLCBhcHBseUNoYW5nZXMsIGZvcm1hdEN1cnJlbnRTdGF0dXMgfSBmcm9tICcuL2RhdGEvYWktcGFyc2VyJztcclxuaW1wb3J0IHsgc3RhdHVzUHJlc2V0IH0gZnJvbSAnLi9wcmVzZXQvZGVmYXVsdC9kZWZhdWx0LXByZXNldCc7XHJcbmltcG9ydCB7IFByZXNldFN0cnVjdHVyZSB9IGZyb20gJy4vZGF0YS9zdGF0dXMtbW9kZWwnO1xyXG5cclxuZGVjbGFyZSBjb25zdCBldmVudE9uOiBhbnk7XHJcbmRlY2xhcmUgY29uc3QgdGF2ZXJuX2V2ZW50czogYW55O1xyXG5kZWNsYXJlIGNvbnN0IGdldENoYXRNZXNzYWdlczogYW55O1xyXG5kZWNsYXJlIGNvbnN0IHNldENoYXRNZXNzYWdlczogYW55O1xyXG5kZWNsYXJlIGNvbnN0IGV2ZW50RW1pdDogYW55O1xyXG5cclxuY29uc3QgU0NSSVBUX05BTUUgPSAn6auY57qn54q25oCB5qCPLXYyLjEnO1xyXG5sZXQgaXNDb3JlSW5pdGlhbGl6ZWQgPSBmYWxzZTtcclxuXHJcbi8qKlxyXG4gKiBTaG93cyBhIGNvbmZpcm1hdGlvbiBtb2RhbCBpbnNpZGUgdGhlIGlmcmFtZSBhbmQgcmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSB1c2VyJ3MgY2hvaWNlLlxyXG4gKi9cclxuZnVuY3Rpb24gY29uZmlybUFjdGlvbihtZXNzYWdlOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcclxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGlmcmFtZURvYyA9IChwYXJlbnQgYXMgYW55KS4kKCcjc3NwLWNvbnRlbnQtaWZyYW1lJylbMF0uY29udGVudFdpbmRvdy5kb2N1bWVudDtcclxuICAgICAgICBjb25zdCAkbW9kYWwgPSAocGFyZW50IGFzIGFueSkuJChpZnJhbWVEb2MpLmZpbmQoJyNzc3AtY29uZmlybS1tb2RhbCcpO1xyXG4gICAgICAgIFxyXG4gICAgICAgICRtb2RhbC5maW5kKCcjc3NwLWNvbmZpcm0tbWVzc2FnZScpLnRleHQobWVzc2FnZSk7XHJcblxyXG4gICAgICAgICRtb2RhbC5maW5kKCcjc3NwLWNvbmZpcm0teWVzJykub2ZmKCdjbGljaycpLm9uKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgJG1vZGFsLmFkZENsYXNzKCdzc3AtaGlkZGVuJyk7XHJcbiAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICRtb2RhbC5maW5kKCcjc3NwLWNvbmZpcm0tbm8nKS5vZmYoJ2NsaWNrJykub24oJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAkbW9kYWwuYWRkQ2xhc3MoJ3NzcC1oaWRkZW4nKTtcclxuICAgICAgICAgICAgcmVzb2x2ZShmYWxzZSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICRtb2RhbC5yZW1vdmVDbGFzcygnc3NwLWhpZGRlbicpO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBQdWJsaXNoZXMgYSBjdXN0b20gZXZlbnQgdG8gdGhlIHBhcmVudCBkb2N1bWVudCB0byB1cGRhdGUgdGhlIFVJLlxyXG4gKiBUaGlzIGlzIHRoZSBjb3JlIG9mIHRoZSBuZXcgZGVjb3VwbGVkIGFyY2hpdGVjdHVyZS5cclxuICovXHJcbmZ1bmN0aW9uIHB1Ymxpc2hWaWV3VXBkYXRlKFxyXG4gICAgdmlldzogJ2NoYXJhY3Rlcl9saXN0JyB8ICdjaGFyYWN0ZXJfZGV0YWlsJyxcclxuICAgIGRhdGE6IHsgY2hhcmFjdGVyTmFtZT86IHN0cmluZzsgY2hhbmdlZEtleXM/OiBzdHJpbmdbXTsgcGFydGlhbD86IGJvb2xlYW4gfSA9IHt9XHJcbik6IHZvaWQge1xyXG4gICAgY29uc3QgZXZlbnQgPSBuZXcgQ3VzdG9tRXZlbnQoJ3NzcDp2aWV3OnVwZGF0ZScsIHtcclxuICAgICAgICBkZXRhaWw6IHtcclxuICAgICAgICAgICAgdmlldyxcclxuICAgICAgICAgICAgY2hhcmFjdGVyc0RhdGEsXHJcbiAgICAgICAgICAgIHN0YXR1c1ByZXNldCxcclxuICAgICAgICAgICAgZGF0YVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgcGFyZW50LmRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xyXG59XHJcblxyXG4vKipcclxuICogSGFuZGxlcyB0aGUgdXBkYXRlIHJlcXVlc3QgZnJvbSBhIGJ1dHRvbiBjbGljay5cclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZVVwZGF0ZVN0YXR1c1JlcXVlc3QocmF3RGlyZWN0aXZlOiBzdHJpbmcsIGJ1dHRvbkVsZW1lbnQ6IEhUTUxFbGVtZW50LCBtZXNzYWdlSWQ6IG51bWJlciwgYmxvY2tJbmRleDogbnVtYmVyKTogUHJvbWlzZTx2b2lkPiB7XHJcbiAgICBjb25zdCBwYXJlbnRfdG9hc3RyID0gKHBhcmVudCBhcyBhbnkpLnRvYXN0cjtcclxuICAgIGNvbnN0IHBhcmVudF8kID0gKHBhcmVudCBhcyBhbnkpLiQ7XHJcbiAgICBjb25zdCAkYnV0dG9uID0gcGFyZW50XyQoYnV0dG9uRWxlbWVudCk7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHBhcnNlZERhdGEgPSBwYXJzZVVwZGF0ZURpcmVjdGl2ZShyYXdEaXJlY3RpdmUpO1xyXG4gICAgICAgIGNvbnN0IGNoYXJOYW1lID0gcGFyc2VkRGF0YS5jaGFyYWN0ZXJOYW1lO1xyXG4gICAgICAgIGxldCBpc05ld0NoYXJhY3RlciA9IGZhbHNlO1xyXG5cclxuICAgICAgICAvLyBDaGVjayBpZiBjaGFyYWN0ZXIgZXhpc3RzLCBpZiBub3QsIGFzayBmb3IgY29uZmlybWF0aW9uLlxyXG4gICAgICAgIGlmICghY2hhcmFjdGVyc0RhdGFbY2hhck5hbWVdKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHVzZXJDb25maXJtZWQgPSBhd2FpdCBjb25maXJtQWN0aW9uKGDop5LoibIgXCIke2NoYXJOYW1lfVwiIOS4jeWtmOWcqOOAguaCqOaDs+S4uuivpeinkuiJsuWIm+W7uuaWsOeahOeKtuaAgeaVsOaNruWQl++8n2ApO1xyXG4gICAgICAgICAgICBpZiAoIXVzZXJDb25maXJtZWQpIHtcclxuICAgICAgICAgICAgICAgIHBhcmVudF90b2FzdHIuaW5mbyhg5bey5Y+W5raI5Li6IFwiJHtjaGFyTmFtZX1cIiDliJvlu7rmlrDnirbmgIHjgIJgKTtcclxuICAgICAgICAgICAgICAgICRidXR0b24uZmluZCgnLnNzcC1idXR0b24tdGV4dCcpLnRleHQoJ+KcqCDmm7TmlrDnirbmgIEnKTsgLy8gUmVzdG9yZSBidXR0b24gdGV4dFxyXG4gICAgICAgICAgICAgICAgJGJ1dHRvbi5yZW1vdmVEYXRhKCdzc3AtcHJvY2Vzc2luZycpO1xyXG4gICAgICAgICAgICAgICAgJGJ1dHRvbi5jc3MoeyAnY3Vyc29yJzogJ3BvaW50ZXInIH0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlzTmV3Q2hhcmFjdGVyID0gdHJ1ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGNoYXJEYXRhID0gZ2V0T3JDcmVhdGVDaGFyKGNoYXJOYW1lLCBzdGF0dXNQcmVzZXQgYXMgUHJlc2V0U3RydWN0dXJlKTtcclxuICAgICAgICBjb25zdCBjaGFuZ2VkS2V5cyA9IGFwcGx5Q2hhbmdlcyhjaGFyRGF0YSwgcGFyc2VkRGF0YS5jaGFuZ2VzLCBzdGF0dXNQcmVzZXQgYXMgUHJlc2V0U3RydWN0dXJlKTtcclxuXHJcbiAgICAgICAgLy8gQWZ0ZXIgY3JlYXRpbmcvdXBkYXRpbmcsIHN3aXRjaCB0byB0aGUgZGV0YWlsIHZpZXcgZm9yIHRoZSBjaGFyYWN0ZXJcclxuICAgICAgICBjb25zdCB2aWV3VXBkYXRlRGF0YTogeyBjaGFyYWN0ZXJOYW1lOiBzdHJpbmc7IGNoYW5nZWRLZXlzPzogc3RyaW5nW107IHBhcnRpYWw/OiBib29sZWFuIH0gPSB7IGNoYXJhY3Rlck5hbWU6IGNoYXJOYW1lIH07XHJcbiAgICAgICAgLy8gT25seSBkbyBhIHBhcnRpYWwgdXBkYXRlIGFuZCBwYXNzIGNoYW5nZWRLZXlzIGlmIGl0J3MgYW4gZXhpc3RpbmcgY2hhcmFjdGVyLlxyXG4gICAgICAgIGlmICghaXNOZXdDaGFyYWN0ZXIpIHtcclxuICAgICAgICAgICAgdmlld1VwZGF0ZURhdGEuY2hhbmdlZEtleXMgPSBjaGFuZ2VkS2V5cztcclxuICAgICAgICAgICAgdmlld1VwZGF0ZURhdGEucGFydGlhbCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIEZvciBuZXcgY2hhcmFjdGVycywgZG8gYSBmdWxsIHJlbmRlci5cclxuICAgICAgICBwdWJsaXNoVmlld1VwZGF0ZSgnY2hhcmFjdGVyX2RldGFpbCcsIHZpZXdVcGRhdGVEYXRhKTtcclxuXHJcbiAgICAgICAgY29uc3QgbWVzc2FnZXMgPSBnZXRDaGF0TWVzc2FnZXMobWVzc2FnZUlkKTtcclxuICAgICAgICBpZiAobWVzc2FnZXMgJiYgbWVzc2FnZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBsZXQgY3VycmVudE1lc3NhZ2VUZXh0ID0gbWVzc2FnZXNbMF0ubWVzc2FnZTtcclxuICAgICAgICAgICAgY29uc3QgbmV3Q3VycmVudFN0YXR1c0Jsb2NrID0gZm9ybWF0Q3VycmVudFN0YXR1cyhjaGFyTmFtZSwgY2hhckRhdGEsIHN0YXR1c1ByZXNldCBhcyBQcmVzZXRTdHJ1Y3R1cmUpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy8gTmV3LCByb2J1c3QgcmVwbGFjZW1lbnQgbG9naWMgdXNpbmcgdGhlIGJsb2NrIGluZGV4XHJcbiAgICAgICAgICAgIGNvbnN0IHVwZGF0ZVJlZ2V4ID0gLzx1cGRhdGVfc3RhdHVzPltcXHNcXFNdKz88XFwvdXBkYXRlX3N0YXR1cz4vZ2k7XHJcbiAgICAgICAgICAgIGxldCBtYXRjaEluZGV4ID0gMDtcclxuICAgICAgICAgICAgY29uc3QgZmluYWxNZXNzYWdlVGV4dCA9IGN1cnJlbnRNZXNzYWdlVGV4dC5yZXBsYWNlKHVwZGF0ZVJlZ2V4LCAobWF0Y2g6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKG1hdGNoSW5kZXggPT09IGJsb2NrSW5kZXgpIHtcclxuICAgICAgICAgICAgICAgICAgICBtYXRjaEluZGV4Kys7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ld0N1cnJlbnRTdGF0dXNCbG9jaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIG1hdGNoSW5kZXgrKztcclxuICAgICAgICAgICAgICAgIHJldHVybiBtYXRjaDtcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBhd2FpdCBzZXRDaGF0TWVzc2FnZXMoW3sgbWVzc2FnZV9pZDogbWVzc2FnZUlkLCBtZXNzYWdlOiBmaW5hbE1lc3NhZ2VUZXh0IH1dLCB7IHJlZnJlc2g6ICdhZmZlY3RlZCcgfSk7XHJcbiAgICAgICAgICAgIC8vIEV4cGxpY2l0bHkgcmUtcmVuZGVyIHRoZSBidXR0b24gZm9yIHRoZSB1cGRhdGVkIG1lc3NhZ2UuXHJcbiAgICAgICAgICAgIGluamVjdEJ1dHRvbkZvck1lc3NhZ2UobWVzc2FnZUlkKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHBhcmVudF90b2FzdHIuc3VjY2Vzcyhg6KeS6ImyIFwiJHtjaGFyTmFtZX1cIiDnmoTnirbmgIHlt7Lmm7TmlrDlubblt7LliJvlu7rmo4Dmn6XngrnjgIJgKTtcclxuICAgICAgICAvLyBObyBuZWVkIHRvIGNhbGwgdXBkYXRlIGFnYWluLCBpdCdzIGRvbmUgYWJvdmUuXHJcbiAgICAgICAgXHJcbiAgICAgICAgJGJ1dHRvbi5maW5kKCcuc3NwLWJ1dHRvbi10ZXh0JykudGV4dCgn4pyFIOW3suW6lOeUqCcpO1xyXG4gICAgICAgICRidXR0b24uZGF0YSgnc3NwLXByb2Nlc3NlZC1ieS1tYWluJywgdHJ1ZSkuY3NzKHtcclxuICAgICAgICAgICAgJ2JhY2tncm91bmQnOiAnbGluZWFyLWdyYWRpZW50KDEzNWRlZywgI2E4ZTA2MywgIzU2YWIyZiknLFxyXG4gICAgICAgICAgICAnY3Vyc29yJzogJ2RlZmF1bHQnXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKGAke1NDUklQVF9OQU1FfTogRXJyb3IgcHJvY2Vzc2luZyB1cGRhdGUgcmVxdWVzdDpgLCBlcnJvcik7XHJcbiAgICAgICAgcGFyZW50X3RvYXN0ci5lcnJvcign54q25oCB5pu05paw5aSx6LSl77yM6K+35p+l55yL5o6n5Yi25Y+w44CCJyk7XHJcbiAgICAgICAgJGJ1dHRvbi5maW5kKCcuc3NwLWJ1dHRvbi10ZXh0JykudGV4dCgn4p2MIOWksei0pScpO1xyXG4gICAgICAgICRidXR0b24uZGF0YSgnc3NwLXByb2Nlc3NlZC1ieS1tYWluJywgdHJ1ZSkuY3NzKHtcclxuICAgICAgICAgICAgJ2JhY2tncm91bmQnOiAnbGluZWFyLWdyYWRpZW50KDEzNWRlZywgI2ZmNmI2YiwgI2Q2MzAzMSknLFxyXG4gICAgICAgICAgICAnY3Vyc29yJzogJ2RlZmF1bHQnXHJcbiAgICAgICAgfSk7XHJcbiAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgICRidXR0b24ucmVtb3ZlRGF0YSgnc3NwLXByb2Nlc3NpbmcnKTtcclxuICAgIH1cclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gaGFuZGxlTG9hZENoZWNrcG9pbnRSZXF1ZXN0KHJhd0RpcmVjdGl2ZTogc3RyaW5nLCBidXR0b25FbGVtZW50OiBIVE1MRWxlbWVudCwgbWVzc2FnZUlkOiBudW1iZXIpOiBQcm9taXNlPHZvaWQ+IHtcclxuICAgIGNvbnN0IHBhcmVudF90b2FzdHIgPSAocGFyZW50IGFzIGFueSkudG9hc3RyO1xyXG4gICAgY29uc3QgcGFyZW50XyQgPSAocGFyZW50IGFzIGFueSkuJDtcclxuICAgIGNvbnN0ICRidXR0b24gPSBwYXJlbnRfJChidXR0b25FbGVtZW50KTtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcGFyc2VkRGF0YSA9IHBhcnNlVXBkYXRlRGlyZWN0aXZlKHJhd0RpcmVjdGl2ZSk7IC8vIFJlLXVzZSB0aGUgc2FtZSBwYXJzZXJcclxuICAgICAgICBjb25zdCBjaGFyTmFtZSA9IHBhcnNlZERhdGEuY2hhcmFjdGVyTmFtZTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBDaGVjayBpZiBjaGFyYWN0ZXIgZXhpc3RzLCBpZiBub3QsIGFzayBmb3IgY29uZmlybWF0aW9uLlxyXG4gICAgICAgIGlmICghY2hhcmFjdGVyc0RhdGFbY2hhck5hbWVdKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHVzZXJDb25maXJtZWQgPSBhd2FpdCBjb25maXJtQWN0aW9uKGDop5LoibIgXCIke2NoYXJOYW1lfVwiIOS4jeWtmOWcqOOAguaCqOaDs+agueaNruatpOajgOafpeeCueWIm+W7uuW5tuWKoOi9veivpeinkuiJsueahOeKtuaAgeWQl++8n2ApO1xyXG4gICAgICAgICAgICBpZiAoIXVzZXJDb25maXJtZWQpIHtcclxuICAgICAgICAgICAgICAgIHBhcmVudF90b2FzdHIuaW5mbyhg5bey5Y+W5raI5Li6IFwiJHtjaGFyTmFtZX1cIiDliqDovb3mo4Dmn6XngrnjgIJgKTtcclxuICAgICAgICAgICAgICAgICRidXR0b24uZmluZCgnLnNzcC1idXR0b24tdGV4dCcpLnRleHQoJ/CflIQg5Yqg6L295qOA5p+l54K5Jyk7IC8vIFJlc3RvcmUgYnV0dG9uIHRleHRcclxuICAgICAgICAgICAgICAgICRidXR0b24ucmVtb3ZlRGF0YSgnc3NwLXByb2Nlc3NpbmcnKTtcclxuICAgICAgICAgICAgICAgICRidXR0b24uY3NzKHsgJ2N1cnNvcic6ICdwb2ludGVyJyB9KTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gVGhpcyBqdXN0IHJlLWFwcGxpZXMgdGhlIHN0YXRlIGZyb20gdGhlIG1lc3NhZ2UgdG8gdGhlIGN1cnJlbnQgY2hhcmFjdGVyIGRhdGFcclxuICAgICAgICBjb25zdCBjaGFyRGF0YSA9IGdldE9yQ3JlYXRlQ2hhcihjaGFyTmFtZSwgc3RhdHVzUHJlc2V0IGFzIFByZXNldFN0cnVjdHVyZSk7XHJcbiAgICAgICAgLy8gRm9yIGNoZWNrcG9pbnRzLCB3ZSBkbyBhIGZ1bGwgdmFsdWUgcmVwbGFjZW1lbnQsIG5vdCByZWxhdGl2ZS5cclxuICAgICAgICBhcHBseUNoYW5nZXMoY2hhckRhdGEsIHBhcnNlZERhdGEuY2hhbmdlcywgc3RhdHVzUHJlc2V0IGFzIFByZXNldFN0cnVjdHVyZSwgdHJ1ZSk7XHJcblxyXG4gICAgICAgIHBhcmVudF90b2FzdHIuc3VjY2Vzcyhg5bey5LuO5raI5oGv5Lit5Yqg6L296KeS6ImyIFwiJHtjaGFyTmFtZX1cIiDnmoTmo4Dmn6XngrnmlbDmja7jgIJgKTtcclxuICAgICAgICAvLyBFbnN1cmUgd2Ugc3dpdGNoIHRvIHRoZSBkZXRhaWwgdmlldyBhZnRlciBsb2FkaW5nIGEgY2hlY2twb2ludC5cclxuICAgICAgICAvLyBBIGZ1bGwgcmVuZGVyIGlzIGJldHRlciBoZXJlIHNpbmNlIHRoZSBjaGFyYWN0ZXIgbWlnaHQgYmUgbmV3LlxyXG4gICAgICAgIHB1Ymxpc2hWaWV3VXBkYXRlKCdjaGFyYWN0ZXJfZGV0YWlsJywgeyBjaGFyYWN0ZXJOYW1lOiBjaGFyTmFtZSB9KTtcclxuXHJcbiAgICAgICAgJGJ1dHRvbi5maW5kKCcuc3NwLWJ1dHRvbi10ZXh0JykudGV4dCgn4pyFIOW3suWKoOi9vScpO1xyXG4gICAgICAgICRidXR0b24uZGF0YSgnc3NwLXByb2Nlc3NlZC1ieS1tYWluJywgdHJ1ZSkuY3NzKHtcclxuICAgICAgICAgICAgJ2JhY2tncm91bmQnOiAnbGluZWFyLWdyYWRpZW50KDEzNWRlZywgIzZhYjFkNywgIzAwOTVlMCknLFxyXG4gICAgICAgICAgICAnY3Vyc29yJzogJ2RlZmF1bHQnXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKGAke1NDUklQVF9OQU1FfTogRXJyb3IgcHJvY2Vzc2luZyBjaGVja3BvaW50IGxvYWQgcmVxdWVzdDpgLCBlcnJvcik7XHJcbiAgICAgICAgcGFyZW50X3RvYXN0ci5lcnJvcign5qOA5p+l54K55Yqg6L295aSx6LSl77yM6K+35p+l55yL5o6n5Yi25Y+w44CCJyk7XHJcbiAgICAgICAgJGJ1dHRvbi5maW5kKCcuc3NwLWJ1dHRvbi10ZXh0JykudGV4dCgn4p2MIOWksei0pScpO1xyXG4gICAgICAgICRidXR0b24uZGF0YSgnc3NwLXByb2Nlc3NlZC1ieS1tYWluJywgdHJ1ZSkuY3NzKHtcclxuICAgICAgICAgICAgJ2JhY2tncm91bmQnOiAnbGluZWFyLWdyYWRpZW50KDEzNWRlZywgI2ZmNmI2YiwgI2Q2MzAzMSknLFxyXG4gICAgICAgICAgICAnY3Vyc29yJzogJ2RlZmF1bHQnXHJcbiAgICAgICAgfSk7XHJcbiAgICB9IGZpbmFsbHkge1xyXG4gICAgICAgICRidXR0b24ucmVtb3ZlRGF0YSgnc3NwLXByb2Nlc3NpbmcnKTtcclxuICAgIH1cclxufVxyXG5cclxuLyoqXHJcbiAqIFNldHMgdXAgdGhlIGRyYWcgZnVuY3Rpb25hbGl0eSBmb3IgdGhlIHBob25lIGNvbnRhaW5lci5cclxuICovXHJcbmZ1bmN0aW9uIG1ha2VEcmFnZ2FibGUoKSB7XHJcbiAgICBjb25zdCBwYXJlbnRfJCA9IChwYXJlbnQgYXMgYW55KS4kO1xyXG4gICAgY29uc3QgJGNvbnRhaW5lciA9IHBhcmVudF8kKCcjc3NwLXBob25lLWNvbnRhaW5lcicpO1xyXG4gICAgY29uc3QgJGRyYWdIYW5kbGUgPSBwYXJlbnRfJCgnI3NzcC10b3AtYmFyJyk7XHJcbiAgICBsZXQgaXNEcmFnZ2luZyA9IGZhbHNlO1xyXG4gICAgbGV0IG9mZnNldCA9IHsgeDogMCwgeTogMCB9O1xyXG5cclxuICAgICRkcmFnSGFuZGxlLm9uKCdtb3VzZWRvd24nLCBmdW5jdGlvbihlOiBKUXVlcnkuTW91c2VEb3duRXZlbnQpIHtcclxuICAgICAgICAvLyBQcmV2ZW50IGRyYWdnaW5nIGlmIHRoZSB0YXJnZXQgaXMgYW4gaW50ZXJhY3RpdmUgZWxlbWVudCBsaWtlIHRoZSBtaW5pbWl6ZSBidXR0b25cclxuICAgICAgICBpZiAocGFyZW50XyQoZS50YXJnZXQpLmlzKCcjc3NwLW1pbmltaXplLWJ0bicpKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaXNEcmFnZ2luZyA9IHRydWU7XHJcbiAgICAgICAgb2Zmc2V0ID0ge1xyXG4gICAgICAgICAgICB4OiBlLmNsaWVudFggLSAkY29udGFpbmVyLm9mZnNldCgpLmxlZnQsXHJcbiAgICAgICAgICAgIHk6IGUuY2xpZW50WSAtICRjb250YWluZXIub2Zmc2V0KCkudG9wXHJcbiAgICAgICAgfTtcclxuICAgICAgICAkY29udGFpbmVyLmNzcygnY3Vyc29yJywgJ2dyYWJiaW5nJyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBwYXJlbnRfJChwYXJlbnQuZG9jdW1lbnQpLm9uKCdtb3VzZW1vdmUnLCBmdW5jdGlvbihlOiBKUXVlcnkuTW91c2VNb3ZlRXZlbnQpIHtcclxuICAgICAgICBpZiAoaXNEcmFnZ2luZykge1xyXG4gICAgICAgICAgICAkY29udGFpbmVyLmNzcyh7XHJcbiAgICAgICAgICAgICAgICB0b3A6IGUuY2xpZW50WSAtIG9mZnNldC55LFxyXG4gICAgICAgICAgICAgICAgbGVmdDogZS5jbGllbnRYIC0gb2Zmc2V0LnhcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSkub24oJ21vdXNldXAnLCBmdW5jdGlvbigpIHtcclxuICAgICAgICBpc0RyYWdnaW5nID0gZmFsc2U7XHJcbiAgICAgICAgJGNvbnRhaW5lci5jc3MoJ2N1cnNvcicsICdkZWZhdWx0Jyk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEluaXRpYWxpemVzIGNvcmUgZnVuY3Rpb25hbGl0aWVzLCBldmVudCBiaW5kaW5ncywgZXRjLlxyXG4gKi9cclxuZnVuY3Rpb24gaW5pdGlhbGl6ZUNvcmUoKSB7XHJcbiAgICBpZiAoaXNDb3JlSW5pdGlhbGl6ZWQpIHJldHVybjtcclxuICAgIGNvbnN0IHBhcmVudF8kID0gKHBhcmVudCBhcyBhbnkpLiQ7XHJcblxyXG4gICAgaW5qZWN0VUkoKTtcclxuXHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICBwdWJsaXNoVmlld1VwZGF0ZSgnY2hhcmFjdGVyX2xpc3QnKTtcclxuICAgICAgICBtYWtlRHJhZ2dhYmxlKCk7XHJcblxyXG4gICAgICAgIC8vIE1pbmltaXplL1Jlc3RvcmUgTG9naWNcclxuICAgICAgICBjb25zdCAkY29udGFpbmVyID0gcGFyZW50XyQoJyNzc3AtcGhvbmUtY29udGFpbmVyJyk7XHJcbiAgICAgICAgY29uc3QgJHJlc3RvcmVCdG4gPSBwYXJlbnRfJCgnYm9keScpLmFwcGVuZCgnPGJ1dHRvbiBpZD1cInNzcC1yZXN0b3JlLWJ0blwiIGNsYXNzPVwic3NwLWhpZGRlblwiPvCfk7E8L2J1dHRvbj4nKS5maW5kKCcjc3NwLXJlc3RvcmUtYnRuJyk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJHJlc3RvcmVCdG4uY3NzKHtcclxuICAgICAgICAgICAgcG9zaXRpb246ICdmaXhlZCcsIGJvdHRvbTogJzE1cHgnLCBsZWZ0OiAnMTVweCcsIHpJbmRleDogOTQ5LCB3aWR0aDogJzQ4cHgnLCBoZWlnaHQ6ICc0OHB4JyxcclxuICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnMjRweCcsIGJvcmRlcjogJ25vbmUnLCBiYWNrZ3JvdW5kOiAncmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpJyxcclxuICAgICAgICAgICAgY29sb3I6ICcjMDA3YWZmJywgZm9udFNpemU6ICcyNHB4JywgY3Vyc29yOiAncG9pbnRlcicsXHJcbiAgICAgICAgICAgIGJveFNoYWRvdzogJzAgM3B4IDEwcHggcmdiYSgwLDAsMCwwLjE1KSwgMCAxcHggM3B4IHJnYmEoMCwwLDAsMC4xKScsXHJcbiAgICAgICAgICAgIGJhY2tkcm9wRmlsdGVyOiAnYmx1cig4cHgpJywgV2Via2l0QmFja2Ryb3BGaWx0ZXI6ICdibHVyKDhweCknLFxyXG4gICAgICAgICAgICBkaXNwbGF5OiAnbm9uZScsIGFsaWduSXRlbXM6ICdjZW50ZXInLCBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246ICd0cmFuc2Zvcm0gMC4ycyBlYXNlLCBiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZSdcclxuICAgICAgICB9KS5vbignbW91c2VlbnRlcicsICgpID0+ICRyZXN0b3JlQnRuLmNzcyh7IGJhY2tncm91bmQ6ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOTUpJywgdHJhbnNmb3JtOiAnc2NhbGUoMS4wNSknIH0pKVxyXG4gICAgICAgICAgLm9uKCdtb3VzZWxlYXZlJywgKCkgPT4gJHJlc3RvcmVCdG4uY3NzKHsgYmFja2dyb3VuZDogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC44KScsIHRyYW5zZm9ybTogJ3NjYWxlKDEpJyB9KSk7XHJcblxyXG4gICAgICAgIC8vIFVzZSBhIGRpcmVjdCwgbm9uLWRlbGVnYXRlZCBldmVudCBoYW5kbGVyIGZvciB0aGUgbWluaW1pemUgYnV0dG9uIHRvIGF2b2lkIGNvbmZsaWN0cy5cclxuICAgICAgICBwYXJlbnRfJCgnI3NzcC1taW5pbWl6ZS1idG4nKS5vbignY2xpY2snLCAoZTogSlF1ZXJ5LkNsaWNrRXZlbnQpID0+IHtcclxuICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTsgLy8gQ3J1Y2lhbGx5LCBzdG9wIHRoZSBldmVudCBmcm9tIGJ1YmJsaW5nIHVwIHRvIHRoZSBkcmFnIGhhbmRsZXIuXHJcbiAgICAgICAgICAgICRjb250YWluZXIuaGlkZSgpO1xyXG4gICAgICAgICAgICAkcmVzdG9yZUJ0bi5zaG93KCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICRyZXN0b3JlQnRuLm9uKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgJGNvbnRhaW5lci5zaG93KCk7XHJcbiAgICAgICAgICAgICRyZXN0b3JlQnRuLmhpZGUoKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9LCAyMDApOyAvLyBBIGJpdCBtb3JlIGRlbGF5IHRvIGVuc3VyZSBVSSBpcyBmdWxseSByZWFkeVxyXG5cclxuICAgIChwYXJlbnQgYXMgYW55KS5zc3BfbWVzc2VuZ2VyID0ge1xyXG4gICAgICAgIHJlcXVlc3REZWxldGlvbjogKGNoYXJhY3Rlck5hbWU6IHN0cmluZykgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBpZnJhbWVEb2MgPSBwYXJlbnRfJCgnI3NzcC1jb250ZW50LWlmcmFtZScpWzBdLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7XHJcbiAgICAgICAgICAgIGNvbnN0ICRtb2RhbCA9IHBhcmVudF8kKGlmcmFtZURvYykuZmluZCgnI3NzcC1jb25maXJtLW1vZGFsJyk7XHJcbiAgICAgICAgICAgICRtb2RhbC5maW5kKCcjc3NwLWNvbmZpcm0tbWVzc2FnZScpLnRleHQoYOehruWumuimgeWIoOmZpOinkuiJsiBcIiR7Y2hhcmFjdGVyTmFtZX1cIiDnmoTmiYDmnInnirbmgIHmlbDmja7lkJfvvJ/mraTmk43kvZzkuI3lj6/pgIbjgIJgKTtcclxuICAgICAgICAgICAgJG1vZGFsLmZpbmQoJyNzc3AtY29uZmlybS15ZXMnKS5vZmYoJ2NsaWNrJykub24oJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgZGVsZXRlQ2hhcihjaGFyYWN0ZXJOYW1lKTtcclxuICAgICAgICAgICAgICAgIChwYXJlbnQgYXMgYW55KS50b2FzdHIuc3VjY2Vzcyhg6KeS6ImyIFwiJHtjaGFyYWN0ZXJOYW1lfVwiIOW3suiiq+WIoOmZpOOAgmApO1xyXG4gICAgICAgICAgICAgICAgcHVibGlzaFZpZXdVcGRhdGUoJ2NoYXJhY3Rlcl9saXN0Jyk7XHJcbiAgICAgICAgICAgICAgICAkbW9kYWwuYWRkQ2xhc3MoJ3NzcC1oaWRkZW4nKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICRtb2RhbC5maW5kKCcjc3NwLWNvbmZpcm0tbm8nKS5vZmYoJ2NsaWNrJykub24oJ2NsaWNrJywgKCkgPT4gJG1vZGFsLmFkZENsYXNzKCdzc3AtaGlkZGVuJykpO1xyXG4gICAgICAgICAgICAkbW9kYWwucmVtb3ZlQ2xhc3MoJ3NzcC1oaWRkZW4nKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIENlbnRyYWxpemVkIGV2ZW50IGhhbmRsZXIgZm9yIGFsbCBpbmplY3RlZCBidXR0b25zXHJcbiAgICBhc3luYyBmdW5jdGlvbiBoYW5kbGVJbmplY3RlZEJ1dHRvbkNsaWNrKHRoaXM6IEhUTUxFbGVtZW50LCBlOiBKUXVlcnkuQ2xpY2tFdmVudCkge1xyXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgY29uc3QgJGJ1dHRvbiA9IHBhcmVudF8kKHRoaXMpO1xyXG5cclxuICAgICAgICBpZiAoJGJ1dHRvbi5kYXRhKCdzc3AtcHJvY2Vzc2VkLWJ5LW1haW4nKSB8fCAkYnV0dG9uLmRhdGEoJ3NzcC1wcm9jZXNzaW5nJykpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAkYnV0dG9uLmRhdGEoJ3NzcC1wcm9jZXNzaW5nJywgdHJ1ZSk7XHJcbiAgICAgICAgJGJ1dHRvbi5maW5kKCcuc3NwLWJ1dHRvbi10ZXh0JykudGV4dCgn4o+zIOWkhOeQhuS4rS4uLicpO1xyXG4gICAgICAgICRidXR0b24uY3NzKHsgJ2N1cnNvcic6ICd3YWl0JyB9KTtcclxuXHJcbiAgICAgICAgY29uc3QgbWVzc2FnZUlkID0gJGJ1dHRvbi5kYXRhKCdzc3AtbWVzc2FnZS1pZCcpO1xyXG4gICAgICAgIGNvbnN0IHJhd0RpcmVjdGl2ZSA9ICRidXR0b24uZGF0YSgnc3NwLXJhdy1kaXJlY3RpdmUnKTtcclxuICAgICAgICBjb25zdCBldmVudFR5cGUgPSAkYnV0dG9uLmRhdGEoJ3NzcC1ldmVudC10eXBlJyk7XHJcbiAgICAgICAgY29uc3QgYmxvY2tJbmRleCA9ICRidXR0b24uZGF0YSgnc3NwLWJsb2NrLWluZGV4Jyk7IC8vIEdldCB0aGUgYmxvY2sgaW5kZXhcclxuXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgLy8gVXNlIHRoZSBnbG9iYWwgZXZlbnRFbWl0LCB3aGljaCBpcyBub3cgY29ycmVjdGx5IHR5cGVkXHJcbiAgICAgICAgICAgIGF3YWl0IGV2ZW50RW1pdChldmVudFR5cGUsIHJhd0RpcmVjdGl2ZSwgdGhpcywgbWVzc2FnZUlkLCBibG9ja0luZGV4KTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGAke1NDUklQVF9OQU1FfTogRXJyb3IgZW1pdHRpbmcgZXZlbnQgJyR7ZXZlbnRUeXBlfSc6YCwgZXJyb3IpO1xyXG4gICAgICAgICAgICAkYnV0dG9uLmZpbmQoJy5zc3AtYnV0dG9uLXRleHQnKS50ZXh0KCfinYwg5LqL5Lu25Y+R6YCB5aSx6LSlJyk7XHJcbiAgICAgICAgICAgICRidXR0b24uZGF0YSgnc3NwLXByb2Nlc3NlZC1ieS1tYWluJywgdHJ1ZSkuY3NzKHtcclxuICAgICAgICAgICAgICAgICdiYWNrZ3JvdW5kJzogJ2xpbmVhci1ncmFkaWVudCgxMzVkZWcsICNmZjZiNmIsICNkNjMwMzEpJyxcclxuICAgICAgICAgICAgICAgICdjdXJzb3InOiAnZGVmYXVsdCdcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICRidXR0b24ucmVtb3ZlRGF0YSgnc3NwLXByb2Nlc3NpbmcnKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gU2V0IHVwIGRlbGVnYXRlZCBldmVudCBsaXN0ZW5lcnMgb24gdGhlIHBhcmVudCBib2R5XHJcbiAgICBjb25zdCBldmVudFRhcmdldCA9IHBhcmVudF8kKHBhcmVudC5kb2N1bWVudC5ib2R5KTtcclxuICAgIGV2ZW50VGFyZ2V0Lm9mZignY2xpY2suc3NwJykub24oJ2NsaWNrLnNzcCcsIGAuJHtVUERBVEVfQlVUVE9OX0NMQVNTfSwgLiR7Q0hFQ0tQT0lOVF9CVVRUT05fQ0xBU1N9YCwgaGFuZGxlSW5qZWN0ZWRCdXR0b25DbGljayk7XHJcblxyXG4gICAgLy8gTGlzdGVuIGZvciBldmVudHMgZW1pdHRlZCBieSB0aGUgYnV0dG9uIGhhbmRsZXJcclxuICAgIGV2ZW50T24oU1NQX1VQREFURV9TVEFUVVNfRVZFTlQsIChyYXdEaXJlY3RpdmU6IHN0cmluZywgYnV0dG9uRWxlbWVudDogSFRNTEVsZW1lbnQsIG1lc3NhZ2VJZDogbnVtYmVyLCBibG9ja0luZGV4OiBudW1iZXIpID0+IFxyXG4gICAgICAgIGhhbmRsZVVwZGF0ZVN0YXR1c1JlcXVlc3QocmF3RGlyZWN0aXZlLCBidXR0b25FbGVtZW50LCBtZXNzYWdlSWQsIGJsb2NrSW5kZXgpXHJcbiAgICApO1xyXG4gICAgZXZlbnRPbihTU1BfTE9BRF9DSEVDS1BPSU5UX0VWRU5ULCAocmF3RGlyZWN0aXZlOiBzdHJpbmcsIGJ1dHRvbkVsZW1lbnQ6IEhUTUxFbGVtZW50LCBtZXNzYWdlSWQ6IG51bWJlciwgYmxvY2tJbmRleDogbnVtYmVyKSA9PiBcclxuICAgICAgICBoYW5kbGVMb2FkQ2hlY2twb2ludFJlcXVlc3QocmF3RGlyZWN0aXZlLCBidXR0b25FbGVtZW50LCBtZXNzYWdlSWQpIC8vIENoZWNrcG9pbnQgZG9lc24ndCBuZWVkIGluZGV4XHJcbiAgICApO1xyXG5cclxuICAgIC8vIEEgY29tcHJlaGVuc2l2ZSBzZXQgb2YgZXZlbnRzIHRoYXQgc2hvdWxkIHRyaWdnZXIgYSByZS1zY2FuIG9mIHRoZSBjaGF0IGZvciBidXR0b24gaW5qZWN0aW9uLlxyXG4gICAgY29uc3QgQ0hBVF9SRUZSRVNIX0VWRU5UUyA9IFtcclxuICAgICAgICB0YXZlcm5fZXZlbnRzLk1FU1NBR0VfU1dJUEVELFxyXG4gICAgICAgIC8vdGF2ZXJuX2V2ZW50cy5DSEFSQUNURVJfTUVTU0FHRV9SRU5ERVJFRCxcclxuICAgICAgICB0YXZlcm5fZXZlbnRzLk1FU1NBR0VfUkVDRUlWRUQsXHJcbiAgICAgICAgdGF2ZXJuX2V2ZW50cy5NRVNTQUdFX0VESVRFRCxcclxuICAgICAgICB0YXZlcm5fZXZlbnRzLk1FU1NBR0VfREVMRVRFRCxcclxuICAgICAgICB0YXZlcm5fZXZlbnRzLk1FU1NBR0VfVVBEQVRFRCxcclxuICAgICAgICB0YXZlcm5fZXZlbnRzLkNIQVRfQ0hBTkdFRCxcclxuICAgICAgICB0YXZlcm5fZXZlbnRzLkNIQVRfQ0xFQVJFRCxcclxuICAgICAgICB0YXZlcm5fZXZlbnRzLkNIQVRfTE9BREVELFxyXG4gICAgICAgIHRhdmVybl9ldmVudHMuTUVTU0FHRV9SRU5ERVJFRCwgLy8gS2VlcCB0aGlzIGZvciBpbmRpdmlkdWFsIG1lc3NhZ2UgcmVuZGVyaW5nXHJcbiAgICBdO1xyXG5cclxuICAgIC8vIEEgZGVib3VuY2VkIGZ1bmN0aW9uIHRvIHByb2Nlc3MgYWxsIG1lc3NhZ2VzLlxyXG4gICAgLy8gVGhpcyBwcmV2ZW50cyB0aGUgZnVuY3Rpb24gZnJvbSBydW5uaW5nIHRvbyBtYW55IHRpbWVzIGluIHF1aWNrIHN1Y2Nlc3Npb24uXHJcbiAgICBsZXQgcmVmcmVzaFRpbWVvdXQ6IGFueTtcclxuICAgIGNvbnN0IGRlYm91bmNlZFJlZnJlc2ggPSAoKSA9PiB7XHJcbiAgICAgICAgY2xlYXJUaW1lb3V0KHJlZnJlc2hUaW1lb3V0KTtcclxuICAgICAgICByZWZyZXNoVGltZW91dCA9IHNldFRpbWVvdXQocHJvY2Vzc0FsbE1lc3NhZ2VzRm9ySW5qZWN0aW9uLCAyMDApO1xyXG4gICAgfTtcclxuXHJcbiAgICAvLyBCaW5kIHRoZSBkZWJvdW5jZWQgcmVmcmVzaCBmdW5jdGlvbiB0byBhbGwgcmVsZXZhbnQgZXZlbnRzLlxyXG4gICAgQ0hBVF9SRUZSRVNIX0VWRU5UUy5mb3JFYWNoKGV2ZW50TmFtZSA9PiB7XHJcbiAgICAgICAgZXZlbnRPbihldmVudE5hbWUsIGRlYm91bmNlZFJlZnJlc2gpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgaXNDb3JlSW5pdGlhbGl6ZWQgPSB0cnVlO1xyXG4gICAgY29uc29sZS5sb2coYCR7U0NSSVBUX05BTUV9OiBDb3JlIGluaXRpYWxpemVkLmApO1xyXG59XHJcblxyXG4vLyBTY3JpcHQgZW50cnkgcG9pbnRcclxuKHBhcmVudCBhcyBhbnkpLiQoKCkgPT4ge1xyXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgdG9hc3RyID0gKHBhcmVudCBhcyBhbnkpLnRvYXN0cjtcclxuICAgICAgICAgICAgaWYgKCF0b2FzdHIgfHwgdHlwZW9mIGV2ZW50T24gIT09ICdmdW5jdGlvbicgfHwgdHlwZW9mIHRhdmVybl9ldmVudHMgIT09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGAke1NDUklQVF9OQU1FfTogTWlzc2luZyBjcml0aWNhbCBBUElzLmApO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRvYXN0ci5zdWNjZXNzKCfpq5jnuqfnirbmgIHmoI92Mi4x5bey5Yqg6L2977yBJywgJ+WKoOi9veaIkOWKnycpO1xyXG4gICAgICAgICAgICBpbml0aWFsaXplQ29yZSgpO1xyXG4gICAgICAgICAgICBwcm9jZXNzQWxsTWVzc2FnZXNGb3JJbmplY3Rpb24oKTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGAke1NDUklQVF9OQU1FfTogQSBjcml0aWNhbCBlcnJvciBvY2N1cnJlZCBkdXJpbmcgaW5pdGlhbGl6YXRpb246YCwgZXJyb3IpO1xyXG4gICAgICAgICAgICBpZiAoKHBhcmVudCBhcyBhbnkpLnRvYXN0cikge1xyXG4gICAgICAgICAgICAgICAgKHBhcmVudCBhcyBhbnkpLnRvYXN0ci5lcnJvcign6auY57qn54q25oCB5qCP6ISa5pys5Yid5aeL5YyW5pe25Y+R55Sf5Lil6YeN6ZSZ6K+v44CCJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LCA1MDApO1xyXG59KTtcclxuXHJcbi8vIFVubG9hZCBsb2dpYyByZW1vdmVkIGFzIGl0IHdhcyBjYXVzaW5nIGNvbmZsaWN0cyB3aXRoIFNpbGx5VGF2ZXJuJ3MgY2hhdCBzd2l0Y2hpbmcgZXZlbnRzLlxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/advanced-status-phone-v2/index.ts\n")},"./src/advanced-status-phone-v2/logic/status-data-manager.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   charactersData: () => (/* binding */ charactersData),\n/* harmony export */   createNewCharacterData: () => (/* binding */ createNewCharacterData),\n/* harmony export */   deleteChar: () => (/* binding */ deleteChar),\n/* harmony export */   findPresetByPath: () => (/* binding */ findPresetByPath),\n/* harmony export */   getOrCreateChar: () => (/* binding */ getOrCreateChar),\n/* harmony export */   getRandomHexColor: () => (/* binding */ getRandomHexColor),\n/* harmony export */   getValueByPath: () => (/* binding */ getValueByPath),\n/* harmony export */   setValueByPath: () => (/* binding */ setValueByPath)\n/* harmony export */ });\n// status-data-manager.ts\n// v2 Decoupled Version\n// Manages the creation, retrieval, and modification of character status data.\nlet charactersData = {};\nfunction getRandomHexColor() {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}\nfunction deleteChar(charName) {\n    if (charactersData[charName]) {\n        delete charactersData[charName];\n        console.log(`È´òÁ∫ßÁä∂ÊÄÅÊ†è (Data Manager): Character \"${charName}\" deleted.`);\n    }\n}\n/**\n * ÈÄíÂΩíÂú∞‰∏∫È¢ÑËÆæÁöÑ‰∏Ä‰∏™ÂàÜÊîØÔºàÁ±ªÂà´ÊàñÂ≠êÁ±ªÂà´ÔºâÂàõÂª∫ÂØπÂ∫îÁöÑËßíËâ≤Êï∞ÊçÆ„ÄÇ\n */\nfunction createDataFromPreset(presetNode) {\n    const dataNode = {};\n    for (const key in presetNode) {\n        // We can safely assume that every value in a preset node is a ConcreteStatusItem,\n        // as per the actual structure of default-preset.ts.\n        const presetItem = presetNode[key];\n        if (presetItem.items && typeof presetItem.items === 'object') {\n            // It's an expandable item with a sub-category, so recurse.\n            dataNode[key] = createDataFromPreset(presetItem.items);\n        }\n        else {\n            // It's a concrete item.\n            dataNode[key] = { value: presetItem.defaultValue, note: '' };\n        }\n    }\n    return dataNode;\n}\n/**\n * Ê†πÊçÆÁªôÂÆöÁöÑÈ¢ÑËÆæÔºåÂàõÂª∫‰∏Ä‰∏™ÂÖ®Êñ∞ÁöÑËßíËâ≤Êï∞ÊçÆÂØπË±°„ÄÇ\n */\nfunction createNewCharacterData(preset) {\n    const newCharacterData = {\n        avatarColor: getRandomHexColor(),\n    };\n    for (const categoryKey in preset) {\n        newCharacterData[categoryKey] = createDataFromPreset(preset[categoryKey]);\n    }\n    return newCharacterData;\n}\n/**\n * Ëé∑ÂèñÊàñÂàõÂª∫‰∏Ä‰∏™ËßíËâ≤Êï∞ÊçÆ„ÄÇÂ¶ÇÊûúËßíËâ≤‰∏çÂ≠òÂú®ÔºåÂàôÊ†πÊçÆÈ¢ÑËÆæÂàõÂª∫Êñ∞ÁöÑÊï∞ÊçÆ„ÄÇ\n */\nfunction getOrCreateChar(characterName, preset) {\n    if (!charactersData[characterName]) {\n        charactersData[characterName] = createNewCharacterData(preset);\n    }\n    else if (!charactersData[characterName].avatarColor) {\n        charactersData[characterName].avatarColor = getRandomHexColor();\n    }\n    return charactersData[characterName];\n}\n/**\n * Ê†πÊçÆË∑ØÂæÑÔºà‰æãÂ¶Ç \"Âü∫Á°Ä‰ø°ÊÅØ/Â∞∫ÂØ∏‰ø°ÊÅØ/Ë∫´È´ò\"ÔºâÂú®È¢ÑËÆæ‰∏≠Êü•ÊâæÂØπÂ∫îÁöÑÈ°πÁõÆÂÆö‰πâ„ÄÇ\n */\nfunction findPresetByPath(path, preset) {\n    const parts = path.split('/');\n    let currentLevel = preset;\n    for (const part of parts) {\n        if (!currentLevel)\n            return null;\n        currentLevel = currentLevel[part];\n        // If we step into an expandable item, we need to look inside its 'items' property\n        if (currentLevel && currentLevel.items) {\n            currentLevel = currentLevel.items;\n        }\n    }\n    // Ensure the final result is a concrete item with a 'type'\n    return currentLevel && currentLevel.type ? currentLevel : null;\n}\n/**\n * Ê†πÊçÆË∑ØÂæÑÂú®ËßíËâ≤Êï∞ÊçÆÂØπË±°‰∏≠ËÆæÁΩÆÂÄº„ÄÇ\n */\nfunction setValueByPath(dataObject, path, value, note = '') {\n    const pathArray = path.split('/');\n    let currentDataLevel = dataObject;\n    for (let i = 0; i < pathArray.length - 1; i++) {\n        const part = pathArray[i];\n        if (!currentDataLevel || typeof currentDataLevel[part] === 'undefined') {\n            console.warn(`setValueByPath: Invalid path segment at \"${part}\" for path \"${path}\".`);\n            return false;\n        }\n        currentDataLevel = currentDataLevel[part];\n    }\n    const keyToSet = pathArray[pathArray.length - 1];\n    if (!currentDataLevel || typeof currentDataLevel[keyToSet] === 'undefined') {\n        console.warn(`setValueByPath: Final key \"${keyToSet}\" not found for path \"${path}\".`);\n        return false;\n    }\n    const targetItem = currentDataLevel[keyToSet];\n    targetItem.value = value;\n    if (note) {\n        targetItem.note = note;\n    }\n    return true;\n}\n/**\n * Ê†πÊçÆË∑ØÂæÑ‰ªéËßíËâ≤Êï∞ÊçÆÂØπË±°‰∏≠Ëé∑ÂèñÂÄº„ÄÇ\n */\nfunction getValueByPath(dataObject, path) {\n    const pathArray = path.split('/');\n    let currentDataLevel = dataObject;\n    for (let i = 0; i < pathArray.length; i++) {\n        const part = pathArray[i];\n        if (typeof currentDataLevel === 'undefined' || currentDataLevel === null)\n            return undefined;\n        currentDataLevel = currentDataLevel[part];\n    }\n    // The final level should be a CharacterDataValue object\n    if (currentDataLevel && typeof currentDataLevel.value !== 'undefined') {\n        return currentDataLevel.value;\n    }\n    return undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/advanced-status-phone-v2/logic/status-data-manager.ts\n")},"./src/advanced-status-phone-v2/preset/default/default-preset.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PRESET_HTML: () => (/* reexport default export from named module */ _preset_html_raw__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   statusPreset: () => (/* binding */ statusPreset)\n/* harmony export */ });\n/* harmony import */ var _preset_html_raw__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./preset.html?raw */ "./src/advanced-status-phone-v2/preset/default/preset.html?raw");\n// default-preset.ts\n// v2.2 "Decoupled" Architecture\n// This file now separates the data preset from the view template.\n// Import the HTML content as a raw string using the \'?raw\' resource query,\n// which is handled by a specific rule in webpack.config.ts.\n\n// Export the imported HTML content so ui-manager.ts can use it.\n\n// The data structure preset remains here.\nconst statusPreset = {\n    "Âü∫Á°Ä‰ø°ÊÅØ": {\n        "Á®ÄÊúâÂ∫¶": { "label": "‚≠êÁ®ÄÊúâÂ∫¶", "type": "text", "defaultValue": "N" },\n        "ÁßçÊóè": { "label": "üê±ÁßçÊóè", "type": "text", "defaultValue": "‰∫∫Á±ª" },\n        "Âπ¥ÈæÑ": { "label": "üéÇÂπ¥ÈæÑ", "type": "text", "defaultValue": "Êú™Áü•" },\n        "Ë∫´‰ªΩ": { "label": "üíºË∫´‰ªΩ", "type": "text", "defaultValue": "Êú™Áü•" },\n        "Â∞∫ÂØ∏‰ø°ÊÅØ": {\n            "label": "üìèÂ∞∫ÂØ∏‰ø°ÊÅØ",\n            "type": "expandable",\n            "defaultValue": {},\n            "items": {\n                "Ë∫´È´ò": { "label": "Ë∫´È´ò", "type": "text", "defaultValue": "Êú™Áü•" },\n                "‰ΩìÈáç": { "label": "‰ΩìÈáç", "type": "text", "defaultValue": "Êú™Áü•" },\n                "ÁΩ©ÊùØ": { "label": "ÁΩ©ÊùØ", "type": "text", "defaultValue": "Êú™Áü•" },\n            }\n        },\n        "Ê°£Ê°à": { "label": "üìúÊ°£Ê°à", "type": "long-text", "defaultValue": "Êó†" },\n        "ÊÄßÊ†º": { "label": "üß†ÊÄßÊ†º", "type": "long-text", "defaultValue": "ÊôÆÈÄö" },\n        "Â§ñË≤å": { "label": "üíÖÂ§ñË≤å", "type": "long-text", "defaultValue": "ÊôÆÈÄö" },\n        "Ë°£Êúç": { "label": "üëóË°£Êúç", "type": "long-text", "defaultValue": "Êó†" },\n        "ÂÜÖË°£": { "label": "üëôÂÜÖË°£", "type": "long-text", "defaultValue": "Êó†" },\n        "È•∞ÂìÅ": { "label": "üìøÈ•∞ÂìÅ", "type": "long-text", "defaultValue": "Êó†" },\n        "ÊÉÖÁª™": { "label": "üòäÊÉÖÁª™", "type": "text", "defaultValue": "Âπ≥Èùô" },\n        "ÊÉ≥Ê≥ï": { "label": "üí¨ÊÉ≥Ê≥ï", "type": "long-text", "defaultValue": "..." },\n        "ÁâπÊÆäÁä∂ÊÄÅ": { "label": "üö´ÁâπÊÆäÁä∂ÊÄÅ", "type": "long-text", "defaultValue": "Êó†" },\n    },\n    "ËØ¶ÁªÜÊï∞ÊçÆ": {\n        "Â•ΩÊÑüÂ∫¶": { "label": "‚ù§Ô∏èÂ•ΩÊÑüÂ∫¶", "type": "progress-bar", "defaultValue": 50, "min": 0, "max": 100 },\n        "Êúç‰ªéÂ∫¶": { "label": "üò£Êúç‰ªéÂ∫¶", "type": "progress-bar", "defaultValue": 0, "min": 0, "max": 100 },\n        "ÊÄßÊ¨≤ÂÄº": { "label": "ü•µÊÄßÊ¨≤ÂÄº", "type": "progress-bar", "defaultValue": 0, "min": 0, "max": 100 },\n        "È´òÊΩÆËøõÂ∫¶": { "label": "üíßÈ´òÊΩÆËøõÂ∫¶", "type": "progress-bar", "defaultValue": 0, "min": 0, "max": 100 },\n    },\n    "Ë∫´‰ΩìÁä∂ÊÄÅ": {\n        "Â∞èÁ©¥Áä∂ÊÄÅ": { "label": "üå∏Â∞èÁ©¥Áä∂ÊÄÅ", "type": "long-text", "defaultValue": "Ê≠£Â∏∏" },\n        "Â±ÅËÇ°Áä∂ÊÄÅ": { "label": "üçëÂ±ÅËÇ°Áä∂ÊÄÅ", "type": "long-text", "defaultValue": "Ê≠£Â∏∏" },\n        "Â•∂Â≠êÁä∂ÊÄÅ": { "label": "üçíÂ•∂Â≠êÁä∂ÊÄÅ", "type": "long-text", "defaultValue": "Ê≠£Â∏∏" },\n        "Âò¥Â∑¥Áä∂ÊÄÅ": { "label": "üëÑÂò¥Â∑¥Áä∂ÊÄÅ", "type": "long-text", "defaultValue": "Ê≠£Â∏∏" },\n        "ÁéâË∂≥Áä∂ÊÄÅ": { "label": "ü¶∂ÁéâË∂≥Áä∂ÊÄÅ", "type": "long-text", "defaultValue": "Ê≠£Â∏∏" },\n        "ÁæéËÖøÁä∂ÊÄÅ": { "label": "üíùÁæéËÖøÁä∂ÊÄÅ", "type": "long-text", "defaultValue": "Ê≠£Â∏∏" },\n        "‰Ωì‰ΩçÂä®‰Ωú": { "label": "üíì‰Ωì‰ΩçÂä®‰Ωú", "type": "long-text", "defaultValue": "Á´ôÁ´ã" },\n    },\n    "ÊÄßÁà±Á¥ØËÆ°": {\n        "‰π≥‰∫§": { "label": "‰π≥‰∫§", "type": "numeric", "defaultValue": 0 },\n        "Âè£‰∫§": { "label": "Âè£‰∫§", "type": "numeric", "defaultValue": 0 },\n        "ÊÄßÁà±": { "label": "ÊÄßÁà±", "type": "numeric", "defaultValue": 0 },\n        "ËÇõ‰∫§": { "label": "ËÇõ‰∫§", "type": "numeric", "defaultValue": 0 },\n        "Ë∂≥‰∫§": { "label": "Ë∂≥‰∫§", "type": "numeric", "defaultValue": 0 },\n        "Êâã‰∫§": { "label": "Êâã‰∫§", "type": "numeric", "defaultValue": 0 },\n    },\n    "Á≤æÊ∂≤Âê´Èáè": {\n        "‰π≥Êàø": { "label": "‰π≥Êàø", "type": "numeric", "defaultValue": 0, "unit": "ml" },\n        "Âè£ËÖî": { "label": "Âè£ËÖî", "type": "numeric", "defaultValue": 0, "unit": "ml" },\n        "Â∞èÁ©¥": { "label": "Â∞èÁ©¥", "type": "numeric", "defaultValue": 0, "unit": "ml" },\n        "ËÇ†ÈÅì": { "label": "ËÇ†ÈÅì", "type": "numeric", "defaultValue": 0, "unit": "ml" },\n        "ÁéâË∂≥": { "label": "ÁéâË∂≥", "type": "numeric", "defaultValue": 0, "unit": "ml" },\n        "È¢úÂ∞Ñ": { "label": "È¢úÂ∞Ñ", "type": "numeric", "defaultValue": 0, "unit": "ml" },\n    },\n    "ÁªüËÆ°‰ø°ÊÅØ": {\n        "‰∫§ÂæÄÊ¨°Êï∞": { "label": "‰∫§ÂæÄÊ¨°Êï∞", "type": "numeric", "defaultValue": 0 },\n        "Ëá™ÊÖ∞Ê¨°Êï∞": { "label": "Ëá™ÊÖ∞Ê¨°Êï∞", "type": "numeric", "defaultValue": 0 },\n        "ÊÄÄÂ≠ïÊ¨°Êï∞": { "label": "ÊÄÄÂ≠ïÊ¨°Êï∞", "type": "numeric", "defaultValue": 0 },\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/advanced-status-phone-v2/preset/default/default-preset.ts\n')},"./src/advanced-status-phone-v2/preset/default/preset.html?raw":F=>{F.exports="<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Advanced Status Phone Content</title>\r\n    <style>\r\n        /* --- Core Styles for the \"Page\" --- */\r\n        html, body {\r\n            width: 100%;\r\n            height: 100%;\r\n            margin: 0;\r\n            padding: 0;\r\n            background-color: #f0f0f5;\r\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\r\n            overflow: hidden;\r\n        }\r\n        :root {\r\n            --ssp-bg-color-base: #f0f0f5; --ssp-bg-color-content: #ffffff;\r\n            --ssp-text-color-primary: #1c1c1e; --ssp-text-color-secondary: #6c6c70;\r\n            --ssp-text-color-label: #333; --ssp-accent-color-blue: #007aff;\r\n            --ssp-accent-color-orange: #ff9500; --ssp-border-color: #dcdce0;\r\n            --ssp-shadow-light: rgba(0,0,0,0.08); --ssp-shadow-medium: rgba(0,0,0,0.12);\r\n        }\r\n        .ssp-clickable { cursor: pointer; user-select: none; }\r\n        .ssp-hidden { display: none !important; }\r\n\r\n        /* --- View Containers --- */\r\n        .ssp-view {\r\n            height: 100%;\r\n            display: flex;\r\n            flex-direction: column;\r\n            overflow-y: auto;\r\n            min-height: 0;\r\n        }\r\n        .ssp-view::-webkit-scrollbar { width: 6px; }\r\n        .ssp-view::-webkit-scrollbar-track { background: rgba(0,0,0,0.05); }\r\n        .ssp-view::-webkit-scrollbar-thumb { background-color: rgba(0,0,0,0.3); border-radius: 3px; }\r\n\r\n        /* --- Character List View Styles --- */\r\n        .ssp-character-list-wrapper { padding: 12px; display: flex; flex-direction: column; gap: 10px; }\r\n        .ssp-empty-list-placeholder { text-align: center; padding: 60px 20px; color: #777; font-size: 14px; display: flex; flex-direction: column; justify-content: center; align-items: center; height: 100%; flex-grow: 1; }\r\n        .ssp-message-item { display: flex; padding: 12px 14px; position: relative; background-color: var(--ssp-bg-color-content); align-items: center; border-radius: 14px; box-shadow: 0 2px 5px var(--ssp-shadow-light); transition: all 0.25s cubic-bezier(0.25, 0.8, 0.25, 1); cursor: pointer; }\r\n        .ssp-message-item:hover { transform: translateY(-3px) scale(1.01); box-shadow: 0 5px 15px var(--ssp-shadow-medium); }\r\n        .ssp-message-item:active { transform: translateY(-1px) scale(0.99); }\r\n        .ssp-avatar { width: clamp(40px, 9vw, 44px); height: clamp(40px, 9vw, 44px); border-radius: 50%; margin-right: 12px; flex-shrink: 0; }\r\n        .ssp-message-content { flex: 1; display: flex; flex-direction: column; gap: 3px; min-width: 0; }\r\n        .ssp-message-title { font-size: clamp(15px, 3.8vw, 17px); color: var(--ssp-text-color-primary); font-weight: 600; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }\r\n        .ssp-message-subtitle { font-size: clamp(12px, 3.2vw, 14px); color: var(--ssp-text-color-secondary); overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }\r\n        .ssp-delete-char-container { position: absolute; right: 14px; top: 50%; transform: translateY(-50%); }\r\n        .ssp-delete-char { color: #ff3b30; font-weight: bold; cursor: pointer; padding: 4px 8px; font-size: 18px; line-height: 1; user-select: none; border-radius: 50%; transition: background-color 0.2s ease, color 0.2s ease; }\r\n        .ssp-delete-char:hover { background-color: rgba(255, 59, 48, 0.1); }\r\n\r\n        /* --- Character Detail View Styles --- */\r\n        .ssp-detail-content { padding: 12px; flex-grow: 1; display: flex; flex-direction: column; gap: 12px; }\r\n        .ssp-back-button { padding: 12px 16px; cursor: pointer; color: var(--ssp-accent-color-blue); font-size: 17px; font-weight: 500; border-bottom: 1px solid var(--ssp-border-color); flex-shrink: 0; background-color: #f9f9f9; text-align: left; }\r\n        .ssp-back-button:hover { background-color: #efeff4; }\r\n        .ssp-collapsible-category { background-color: var(--ssp-bg-color-content); border-radius: 12px; box-shadow: 0 2px 4px var(--ssp-shadow-light); transition: all 0.3s ease; overflow: hidden; }\r\n        .ssp-category-header { display: flex; justify-content: space-between; align-items: center; padding: 14px 16px; font-size: 16px; font-weight: 600; color: var(--ssp-text-color-primary); }\r\n        .ssp-category-header .ssp-category-icon { margin-right: 10px; font-style: normal; }\r\n        .ssp-category-header .ssp-toggle-icon { font-size: 12px; color: var(--ssp-text-color-secondary); transition: transform 0.3s ease; }\r\n        .ssp-collapsible-category.ssp-collapsed .ssp-toggle-icon { transform: rotate(-90deg); }\r\n        .ssp-category-content { padding: 12px 16px 16px 16px; border-top: 1px solid var(--ssp-border-color); display: flex; flex-direction: column; gap: 14px; }\r\n        \r\n        /* --- Refined Item Styles --- */\r\n        .ssp-item-updated-highlight { background-color: rgba(0, 122, 255, 0.1) !important; transition: background-color 0.5s ease; }\r\n        .ssp-detail-item, .ssp-prose-item, .ssp-progress-bar-item, .ssp-expandable-item-container { padding: 6px 8px; border-radius: 8px; margin: -6px -8px; /* Negative margin to make highlight seamless */ }\r\n\r\n        .ssp-detail-item { display: flex; justify-content: space-between; align-items: center; font-size: 15px; }\r\n        .ssp-detail-item-label { color: var(--ssp-text-color-label); white-space: nowrap; margin-right: 10px; }\r\n        .ssp-detail-item-value { color: var(--ssp-text-color-secondary); text-align: right; word-break: break-word; }\r\n        \r\n        .ssp-prose-item { display: flex; flex-direction: column; gap: 4px; }\r\n        .ssp-prose-item .ssp-prose-label { font-size: 15px; font-weight: 600; color: var(--ssp-text-color-primary); }\r\n        .ssp-prose-item .ssp-prose-value { font-size: 14px; color: var(--ssp-text-color-secondary); line-height: 1.5; white-space: pre-wrap; }\r\n        \r\n        /* --- Expandable Item & Compact Table --- */\r\n        .ssp-expandable-item-header { display: flex; justify-content: space-between; align-items: center; font-size: 15px; }\r\n        .ssp-expandable-item-header .ssp-detail-item-label { font-weight: 500; }\r\n        .ssp-expandable-item-header .ssp-toggle-icon { color: #c0c0c0; font-size: 16px; transition: transform 0.2s ease; }\r\n        .ssp-expandable-item-container.ssp-collapsed .ssp-toggle-icon { transform: rotate(-90deg); }\r\n        .ssp-expandable-item-content { display: flex; flex-direction: column; align-items: center; padding-top: 8px; }\r\n        \r\n        .ssp-size-table { width: auto; border-collapse: collapse; font-size: 15px; }\r\n        .ssp-size-table tr { border-bottom: 1px solid var(--ssp-bg-color-base); }\r\n        .ssp-size-table tr:last-child { border-bottom: none; }\r\n        .ssp-size-table td { padding: 4px 8px; }\r\n        .ssp-size-table td:first-child { color: var(--ssp-text-color-label); font-weight: 500; white-space: nowrap; }\r\n        .ssp-size-table td:last-child { color: var(--ssp-text-color-secondary); text-align: right; }\r\n        .ssp-progress-bar-item { position: relative; } .ssp-progress-bar-label { display: flex; justify-content: space-between; font-size: 14px; margin-bottom: 6px; } .ssp-progress-bar-name { font-weight: 500; color: var(--ssp-text-color-label); } .ssp-progress-bar-value { font-weight: 500; color: var(--ssp-text-color-secondary); } .ssp-progress-bar-track { height: 12px; background-color: #e9ecef; border-radius: 6px; overflow: hidden; box-shadow: inset 0 1px 2px rgba(0,0,0,0.1); }\r\n        .ssp-progress-bar-fill { height: 100%; border-radius: 6px; transition: width 0.5s cubic-bezier(0.25, 0.8, 0.25, 1); background-image: linear-gradient(45deg, rgba(255,255,255,0.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,0.15) 50%, rgba(255,255,255,0.15) 75%, transparent 75%, transparent); background-size: 20px 20px; animation: ssp-progress-bar-stripes 1s linear infinite; } @keyframes ssp-progress-bar-stripes { from { background-position: 20px 0; } to { background-position: 0 0; } }\r\n        .ssp-progress-bar-item[data-type*=\"Â•ΩÊÑüÂ∫¶\"] .ssp-progress-bar-fill { background-color: #ff3b30; }\r\n        .ssp-progress-bar-item[data-type*=\"Êúç‰ªéÂ∫¶\"] .ssp-progress-bar-fill { background-color: #5856d6; }\r\n        .ssp-progress-bar-item[data-type*=\"ÊÄßÊ¨≤ÂÄº\"] .ssp-progress-bar-fill { background-color: #ff2d55; }\r\n        .ssp-progress-bar-item[data-type*=\"È´òÊΩÆËøõÂ∫¶\"] .ssp-progress-bar-fill { background-color: #34c759; }\r\n    </style>\r\n</head>\r\n<body>\r\n    \x3c!-- View Container for Character List --\x3e\r\n    <div id=\"ssp-character-list-view\" class=\"ssp-view\">\r\n        \x3c!-- Content will be rendered here by renderCharacterList --\x3e\r\n    </div>\r\n\r\n    \x3c!-- View Container for Character Detail --\x3e\r\n    <div id=\"ssp-character-detail-view\" class=\"ssp-view ssp-hidden\">\r\n        \x3c!-- Content will be rendered here by renderCharacterDetail --\x3e\r\n    </div>\r\n    \r\n    \x3c!-- Modal for confirmations --\x3e\r\n    <div id=\"ssp-confirm-modal\" class=\"ssp-hidden\" style=\"position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); display: flex; justify-content: center; align-items: center; z-index: 1000;\">\r\n        <div style=\"background: white; padding: 20px; border-radius: 8px; text-align: center; box-shadow: 0 4px 15px rgba(0,0,0,0.2);\">\r\n            <p id=\"ssp-confirm-message\" style=\"margin: 0 0 15px 0;\"></p>\r\n            <div>\r\n                <button id=\"ssp-confirm-yes\" style=\"padding: 8px 16px; margin-right: 10px; border: none; background-color: var(--ssp-accent-color-blue); color: white; border-radius: 5px; cursor: pointer;\">ÊòØ</button>\r\n                <button id=\"ssp-confirm-no\" style=\"padding: 8px 16px; border: 1px solid #ccc; background-color: #eee; border-radius: 5px; cursor: pointer;\">Âê¶</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <script>\r\n        // GENERIC DATA-DRIVEN RENDERER v2 (Multi-View)\r\n        (() => {\r\n            const $ = parent.jQuery;\r\n            if (!$) { console.error(\"SSP Renderer: jQuery not found on parent.\"); return; }\r\n\r\n            let localCharactersData = {};\r\n            let localStatusPreset = {};\r\n\r\n            // --- View Containers ---\r\n            const $listView = $(document).find('#ssp-character-list-view');\r\n            const $detailView = $(document).find('#ssp-character-detail-view');\r\n\r\n            function getRandomHexColor() {\r\n                const letters = '0123456789ABCDEF';\r\n                let color = '#';\r\n                for (let i = 0; i < 6; i++) { color += letters[Math.floor(Math.random() * 16)]; }\r\n                return color;\r\n            }\r\n\r\n            function renderCharacterList(container, charactersData) {\r\n                container.empty().addClass('ssp-character-list-wrapper');\r\n                if (Object.keys(charactersData).length === 0) {\r\n                    container.html('<div class=\"ssp-empty-list-placeholder\">ÊöÇÊó†ËßíËâ≤Êï∞ÊçÆ...</div>');\r\n                    return;\r\n                }\r\n                for (const charName in charactersData) {\r\n                    const charEntry = charactersData[charName];\r\n                    const avatarColor = charEntry.avatarColor || getRandomHexColor();\r\n                    if (!charEntry.avatarColor) charEntry.avatarColor = avatarColor;\r\n                    const item = $('<div>', { class: 'ssp-message-item ssp-clickable', 'data-character-name': charName })\r\n                        .append($('<div>', { class: 'ssp-avatar', style: `background-color: ${avatarColor};` }))\r\n                        .append($('<div>', { class: 'ssp-message-content' })\r\n                            .append(`<div class=\"ssp-message-title\">${charName}</div>`)\r\n                            .append(`<div class=\"ssp-message-subtitle\">ÁÇπÂáªÊü•ÁúãËØ¶ÊÉÖ</div>`))\r\n                        .append($('<div>', { class: 'ssp-delete-char-container' })\r\n                            .append($('<span>', { class: 'ssp-delete-char ssp-clickable', title: 'Âà†Èô§', 'data-character-name': charName }).html('√ó')));\r\n                    container.append(item);\r\n                }\r\n            }\r\n\r\n            function renderSizeInfoTable(itemData) {\r\n                const height = itemData?.Ë∫´È´ò?.value || 'Êú™Áü•';\r\n                const weight = itemData?.‰ΩìÈáç?.value || 'Êú™Áü•';\r\n                const cup = itemData?.ÁΩ©ÊùØ?.value || 'Êú™Áü•';\r\n                return `<table class=\"ssp-size-table\">\r\n                            <tr data-key=\"Ë∫´È´ò\"><td>Ë∫´È´ò</td><td>${height}</td></tr>\r\n                            <tr data-key=\"‰ΩìÈáç\"><td>‰ΩìÈáç</td><td>${weight}</td></tr>\r\n                            <tr data-key=\"ÁΩ©ÊùØ\"><td>ÁΩ©ÊùØ</td><td>${cup}</td></tr>\r\n                        </table>`;\r\n            }\r\n\r\n            function renderItem(itemPreset, itemData, itemKey) {\r\n                const value = itemData ? itemData.value : itemPreset.defaultValue;\r\n                const note = itemData ? itemData.note : '';\r\n                const noteHtml = note ? `<span class=\"ssp-detail-item-note\"> (${note})</span>` : '';\r\n\r\n                if (itemPreset.type === 'long-text' || itemKey === 'ÊÉÖÁª™') {\r\n                    return `<div class=\"ssp-prose-item\" data-key=\"${itemKey}\">\r\n                                <div class=\"ssp-prose-label\">${itemPreset.label}</div>\r\n                                <div class=\"ssp-prose-value\">${value}${noteHtml}</div>\r\n                            </div>`;\r\n                }\r\n\r\n                switch (itemPreset.type) {\r\n                    case 'progress-bar':\r\n                        const numValue = Number(value) || 0;\r\n                        const max = itemPreset.max || 100;\r\n                        const percentage = Math.max(0, Math.min(100, (numValue / max) * 100));\r\n                        return `<div class=\"ssp-progress-bar-item\" data-key=\"${itemKey}\" data-type=\"${itemPreset.label}\">\r\n                                    <div class=\"ssp-progress-bar-label\">\r\n                                        <span class=\"ssp-progress-bar-name\">${itemPreset.label}</span>\r\n                                        <span class=\"ssp-progress-bar-value\">${numValue} / ${max}</span>\r\n                                    </div>\r\n                                    <div class=\"ssp-progress-bar-track\">\r\n                                        <div class=\"ssp-progress-bar-fill\" style=\"width: ${percentage}%;\"></div>\r\n                                    </div>\r\n                                </div>`;\r\n                    default: // 'text', 'numeric'\r\n                        return `<div class=\"ssp-detail-item\" data-key=\"${itemKey}\">\r\n                                    <span class=\"ssp-detail-item-label\">${itemPreset.label}</span>\r\n                                    <span class=\"ssp-detail-item-value\">${value}${itemPreset.unit || ''}${noteHtml}</span>\r\n                                </div>`;\r\n                }\r\n            }\r\n\r\n            function renderCategoryContent(presetCategory, dataCategory) {\r\n                const $content = $('<div>', { class: 'ssp-category-content' });\r\n                for (const itemKey in presetCategory) {\r\n                    const itemPreset = presetCategory[itemKey];\r\n                    const itemData = dataCategory ? dataCategory[itemKey] : undefined;\r\n\r\n                    if (itemPreset.items) { // It's an expandable item (like 'Â∞∫ÂØ∏‰ø°ÊÅØ' or any other group)\r\n                        const $container = $('<div>', { class: 'ssp-expandable-item-container ssp-collapsed', 'data-key': itemKey });\r\n                        const $header = $('<div>', { class: 'ssp-expandable-item-header ssp-clickable' })\r\n                            .html(`<span class=\"ssp-detail-item-label\">${itemPreset.label}</span><span class=\"ssp-toggle-icon\">‚ñº</span>`);\r\n                        \r\n                        let $itemContent;\r\n                        if (itemKey === 'Â∞∫ÂØ∏‰ø°ÊÅØ') {\r\n                            $itemContent = $(renderSizeInfoTable(itemData));\r\n                        } else {\r\n                            $itemContent = renderCategoryContent(itemPreset.items, itemData);\r\n                        }\r\n                        $itemContent.addClass('ssp-expandable-item-content').hide(); // Hide by default\r\n                        \r\n                        $container.append($header, $itemContent);\r\n                        $content.append($container);\r\n                    } else { // It's a concrete, non-expandable item\r\n                        $content.append(renderItem(itemPreset, itemData, itemKey));\r\n                    }\r\n                }\r\n                return $content;\r\n            }\r\n\r\n            function partialUpdate(characterName, characterData, statusPreset) {\r\n                // This function updates only the values, preserving the structure, scroll position, and collapsed states.\r\n                const $container = $detailView;\r\n                \r\n                function updateItems(presetNode, dataNode) {\r\n                    for (const key in presetNode) {\r\n                        const itemPreset = presetNode[key];\r\n                        const itemData = dataNode ? dataNode[key] : undefined;\r\n\r\n                        if (itemPreset.items) { // It's a sub-category\r\n                            updateItems(itemPreset.items, itemData);\r\n                        } else { // It's a concrete item\r\n                            const $item = $container.find(`[data-key=\"${key}\"]`);\r\n                            if (!$item.length) continue;\r\n\r\n                            const value = itemData ? itemData.value : itemPreset.defaultValue;\r\n                            const note = itemData ? itemData.note : '';\r\n                            const noteHtml = note ? `<span class=\"ssp-detail-item-note\"> (${note})</span>` : '';\r\n\r\n                            if (itemPreset.type === 'progress-bar') {\r\n                                const numValue = Number(value) || 0;\r\n                                const max = itemPreset.max || 100;\r\n                                const percentage = Math.max(0, Math.min(100, (numValue / max) * 100));\r\n                                $item.find('.ssp-progress-bar-value').text(`${numValue} / ${max}`);\r\n                                $item.find('.ssp-progress-bar-fill').css('width', `${percentage}%`);\r\n                            } else if (itemPreset.type === 'long-text' || key === 'ÊÉÖÁª™') {\r\n                                $item.find('.ssp-prose-value').html(`${value}${noteHtml}`);\r\n                            } else if ($item.is('tr')) { // It's a row in the size table\r\n                                $item.find('td:last-child').html(`${value}`);\r\n                            } else { // It's a standard detail item\r\n                                $item.find('.ssp-detail-item-value').html(`${value}${itemPreset.unit || ''}${noteHtml}`);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                // Start traversal from the root of the preset\r\n                for (const categoryKey in statusPreset) {\r\n                    updateItems(statusPreset[categoryKey], characterData[categoryKey]);\r\n                }\r\n            }\r\n\r\n            function renderCharacterDetail(container, characterName, characterData, statusPreset) {\r\n                 container.empty();\r\n                 const backButton = $('<div>', { class: 'ssp-back-button ssp-clickable' }).html('‚Äπ ËøîÂõûÂàóË°®');\r\n                 const detailContent = $('<div>', { class: 'ssp-detail-content' });\r\n\r\n                 for (const categoryKey in statusPreset) {\r\n                     const categoryPreset = statusPreset[categoryKey];\r\n                     const categoryData = characterData[categoryKey];\r\n                     const $categoryDiv = $('<div>', { class: 'ssp-collapsible-category' });\r\n                     const $header = $('<div>', { class: 'ssp-category-header ssp-clickable' })\r\n                         .html(`<span class=\"ssp-category-icon\"></span> ${categoryKey} <span class=\"ssp-toggle-icon\">‚ñº</span>`);\r\n                     const $content = renderCategoryContent(categoryPreset, categoryData);\r\n                     $categoryDiv.append($header, $content);\r\n                     detailContent.append($categoryDiv);\r\n                 }\r\n\r\n                 container.append(backButton, detailContent);\r\n\r\n                 const categories = detailContent.find('.ssp-collapsible-category');\r\n                 categories.each(function(index, element) {\r\n                     const $category = $(element);\r\n                     if (index === 0) {\r\n                         $category.removeClass('ssp-collapsed');\r\n                         $category.find('.ssp-category-content').show();\r\n                     } else {\r\n                         $category.addClass('ssp-collapsed');\r\n                         $category.find('.ssp-category-content').hide();\r\n                     }\r\n                 });\r\n            }\r\n\r\n            window.ssp_renderer = {\r\n                update: (view, charactersData, statusPreset, data) => {\r\n                    localCharactersData = charactersData;\r\n                    localStatusPreset = statusPreset;\r\n                    const parentTitle = parent.document.getElementById('ssp-title');\r\n\r\n                    // Clear any existing highlights before any rendering action\r\n                    $detailView.find('.ssp-item-updated-highlight').removeClass('ssp-item-updated-highlight');\r\n\r\n                    switch (view) {\r\n                        case 'character_list':\r\n                            if(parentTitle) parentTitle.innerText = 'ËßíËâ≤Áä∂ÊÄÅÂàóË°®';\r\n                            renderCharacterList($listView, localCharactersData);\r\n                            $detailView.addClass('ssp-hidden');\r\n                            $listView.removeClass('ssp-hidden');\r\n                            break;\r\n                        case 'character_detail':\r\n                            const charName = data.characterName;\r\n                            const charEntry = charName ? localCharactersData[charName] : undefined;\r\n                            if (!charName || !charEntry) {\r\n                                if(parentTitle) parentTitle.innerText = 'ËßíËâ≤Áä∂ÊÄÅÂàóË°®';\r\n                                renderCharacterList($listView, localCharactersData);\r\n                                $detailView.addClass('ssp-hidden');\r\n                                $listView.removeClass('ssp-hidden');\r\n                                return;\r\n                            }\r\n                            \r\n                            if (data.partial) {\r\n                                // This is a partial update, only refresh values\r\n                                partialUpdate(charName, charEntry, localStatusPreset);\r\n                            } else {\r\n                                // This is a full re-render\r\n                                if(parentTitle) parentTitle.innerText = charName;\r\n                                renderCharacterDetail($detailView, charName, charEntry, localStatusPreset);\r\n                                $listView.addClass('ssp-hidden');\r\n                                $detailView.removeClass('ssp-hidden');\r\n                            }\r\n\r\n                            // Apply new highlights if any (works for both partial and full updates)\r\n                            if (data.changedKeys && Array.isArray(data.changedKeys)) {\r\n                                setTimeout(() => {\r\n                                    data.changedKeys.forEach(key => {\r\n                                        $detailView.find(`[data-key=\"${key}\"]`).addClass('ssp-item-updated-highlight');\r\n                                    });\r\n                                }, 50); // Short delay to ensure DOM is ready\r\n                            }\r\n                            break;\r\n                        default:\r\n                            if(parentTitle) parentTitle.innerText = 'ËßíËâ≤Áä∂ÊÄÅÂàóË°®';\r\n                            renderCharacterList($listView, localCharactersData);\r\n                            $detailView.addClass('ssp-hidden');\r\n                            $listView.removeClass('ssp-hidden');\r\n                    }\r\n                }\r\n            };\r\n\r\n            // Listen for the custom event dispatched from the main script\r\n            $(window.parent.document).on('ssp:view:update', function(e) {\r\n                const { view, charactersData, statusPreset, data } = e.detail;\r\n                window.ssp_renderer.update(view, charactersData, statusPreset, data);\r\n            });\r\n\r\n            // Use native event listener on the iframe's document for robustness\r\n            document.addEventListener('DOMContentLoaded', function() {\r\n                document.body.addEventListener('click', function(e) {\r\n                    const clickableTarget = e.target.closest('.ssp-clickable');\r\n                    if (!clickableTarget) return;\r\n\r\n                    e.stopPropagation();\r\n                    const $target = $(clickableTarget); // Use parent jQuery to wrap the element\r\n\r\n                    if ($target.hasClass('ssp-message-item')) {\r\n                        const charName = $target.data('character-name');\r\n                        window.ssp_renderer.update('character_detail', localCharactersData, localStatusPreset, { characterName: charName });\r\n                    } else if ($target.hasClass('ssp-back-button')) {\r\n                        window.ssp_renderer.update('character_list', localCharactersData, localStatusPreset, {});\r\n                    } else if ($target.hasClass('ssp-category-header') || $target.hasClass('ssp-expandable-item-header')) {\r\n                        const content = $target.next();\r\n                        content.slideToggle(200);\r\n                        $target.closest('.ssp-collapsible-category, .ssp-expandable-item-container').toggleClass('ssp-collapsed');\r\n                    } else if ($target.hasClass('ssp-delete-char')) {\r\n                        const charName = $target.data('character-name');\r\n                        if (window.parent.ssp_messenger && typeof window.parent.ssp_messenger.requestDeletion === 'function') {\r\n                            window.parent.ssp_messenger.requestDeletion(charName);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        })();\r\n    <\/script>\r\n</body>\r\n</html>\r\n"},"./src/advanced-status-phone-v2/ui/ui-manager.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   injectUI: () => (/* binding */ injectUI)\n/* harmony export */ });\n/* harmony import */ var _preset_default_default_preset__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../preset/default/default-preset */ \"./src/advanced-status-phone-v2/preset/default/default-preset.ts\");\n// ui-manager.ts\n// v2.1 \"Browser-Page\" Architecture\n// This manager creates the main UI \"frame\" (the browser) and an iframe for the \"page\" content.\n\nconst parent_$ = parent.$;\nlet uiIframe = null;\nlet phoneContainer = null;\n/**\n * Injects the main UI frame and the content iframe.\n */\nfunction injectUI() {\n    if (parent_$('#ssp-phone-container').length > 0) {\n        return; // UI already exists\n    }\n    // Inject styles for the frame elements if they don't exist\n    if (parent_$('#ssp-frame-styles').length === 0) {\n        const frameStyles = `\r\n            #ssp-minimize-btn {\r\n                padding: 6px 8px;\r\n                border-radius: 50%;\r\n                transition: background-color 0.2s ease;\r\n                font-size: 20px;\r\n                line-height: 1;\r\n                user-select: none;\r\n                cursor: pointer;\r\n            }\r\n            #ssp-minimize-btn:hover {\r\n                background-color: rgba(255, 255, 255, 0.25);\r\n            }\r\n        `;\n        parent_$('head').append(`<style id=\"ssp-frame-styles\">${frameStyles}</style>`);\n    }\n    // 1. Create the main phone container (\"The Browser\")\n    phoneContainer = parent_$('<div />', {\n        id: 'ssp-phone-container',\n        css: {\n            position: 'fixed',\n            top: '60px',\n            left: '20px',\n            zIndex: 950,\n            width: 'min(375px, 85vw)',\n            aspectRatio: '9 / 17',\n            maxWidth: '390px',\n            borderRadius: '20px',\n            boxShadow: '0 8px 24px rgba(0,0,0,0.15), 0 2px 8px rgba(0,0,0,0.1)',\n            backgroundColor: '#f0f0f5',\n            border: '1px solid #dcdce0',\n            display: 'flex',\n            flexDirection: 'column',\n            fontFamily: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif\",\n            overflow: 'hidden'\n        }\n    });\n    // 2. Create the draggable top bar\n    const topBar = parent_$('<div />', {\n        id: 'ssp-top-bar',\n        html: '<span id=\"ssp-title\">Áä∂ÊÄÅÈù¢Êùø</span><div class=\"ssp-top-right-icons\"><span id=\"ssp-minimize-btn\" title=\"ÊúÄÂ∞èÂåñ\" class=\"ssp-clickable\">Ôºç</span></div>',\n        css: {\n            background: 'linear-gradient(135deg, #6ab1d7, #0095e0)',\n            height: '44px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            padding: '0 16px',\n            color: 'white',\n            fontWeight: 600,\n            fontSize: 'clamp(14px, 3.8vw, 16px)',\n            flexShrink: 0,\n            cursor: 'move'\n        }\n    });\n    // 3. Create the content iframe (\"The Page\")\n    const $iframe = parent_$('<iframe />', {\n        id: 'ssp-content-iframe',\n        css: {\n            flexGrow: 1,\n            border: 'none',\n            backgroundColor: 'transparent'\n        }\n    });\n    // 4. Assemble and inject\n    if (!phoneContainer)\n        return; // Type guard\n    phoneContainer.append(topBar).append($iframe);\n    parent_$('body').append(phoneContainer);\n    // 5. Load the page content into the iframe\n    uiIframe = $iframe[0];\n    if (uiIframe.contentWindow) {\n        uiIframe.contentWindow.document.open();\n        uiIframe.contentWindow.document.write(_preset_default_default_preset__WEBPACK_IMPORTED_MODULE_0__.PRESET_HTML);\n        uiIframe.contentWindow.document.close();\n        console.log('È´òÁ∫ßÁä∂ÊÄÅÊ†è (UI Manager): UI Frame and Page injected.');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYWR2YW5jZWQtc3RhdHVzLXBob25lLXYyL3VpL3VpLW1hbmFnZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxnQkFBZ0I7QUFDaEIsbUNBQW1DO0FBQ25DLCtGQUErRjtBQUVoQztBQUcvRCxNQUFNLFFBQVEsR0FBSSxNQUFjLENBQUMsQ0FBQyxDQUFDO0FBQ25DLElBQUksUUFBUSxHQUE2QixJQUFJLENBQUM7QUFDOUMsSUFBSSxjQUFjLEdBQStCLElBQUksQ0FBQztBQUV0RDs7R0FFRztBQUNJLFNBQVMsUUFBUTtJQUNwQixJQUFJLFFBQVEsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUM5QyxPQUFPLENBQUMsb0JBQW9CO0lBQ2hDLENBQUM7SUFFRCwyREFBMkQ7SUFDM0QsSUFBSSxRQUFRLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFLENBQUM7UUFDN0MsTUFBTSxXQUFXLEdBQUc7Ozs7Ozs7Ozs7Ozs7U0FhbkIsQ0FBQztRQUNGLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsZ0NBQWdDLFdBQVcsVUFBVSxDQUFDLENBQUM7SUFDbkYsQ0FBQztJQUVELHFEQUFxRDtJQUNyRCxjQUFjLEdBQUcsUUFBUSxDQUFDLFNBQVMsRUFBRTtRQUNqQyxFQUFFLEVBQUUscUJBQXFCO1FBQ3pCLEdBQUcsRUFBRTtZQUNELFFBQVEsRUFBRSxPQUFPO1lBQ2pCLEdBQUcsRUFBRSxNQUFNO1lBQ1gsSUFBSSxFQUFFLE1BQU07WUFDWixNQUFNLEVBQUUsR0FBRztZQUNYLEtBQUssRUFBRSxrQkFBa0I7WUFDekIsV0FBVyxFQUFFLFFBQVE7WUFDckIsUUFBUSxFQUFFLE9BQU87WUFDakIsWUFBWSxFQUFFLE1BQU07WUFDcEIsU0FBUyxFQUFFLHdEQUF3RDtZQUNuRSxlQUFlLEVBQUUsU0FBUztZQUMxQixNQUFNLEVBQUUsbUJBQW1CO1lBQzNCLE9BQU8sRUFBRSxNQUFNO1lBQ2YsYUFBYSxFQUFFLFFBQVE7WUFDdkIsVUFBVSxFQUFFLDRGQUE0RjtZQUN4RyxRQUFRLEVBQUUsUUFBUTtTQUNyQjtLQUNKLENBQUMsQ0FBQztJQUVILGtDQUFrQztJQUNsQyxNQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsU0FBUyxFQUFFO1FBQy9CLEVBQUUsRUFBRSxhQUFhO1FBQ2pCLElBQUksRUFBRSwrSUFBK0k7UUFDckosR0FBRyxFQUFFO1lBQ0QsVUFBVSxFQUFFLDJDQUEyQztZQUN2RCxNQUFNLEVBQUUsTUFBTTtZQUNkLE9BQU8sRUFBRSxNQUFNO1lBQ2YsVUFBVSxFQUFFLFFBQVE7WUFDcEIsY0FBYyxFQUFFLGVBQWU7WUFDL0IsT0FBTyxFQUFFLFFBQVE7WUFDakIsS0FBSyxFQUFFLE9BQU87WUFDZCxVQUFVLEVBQUUsR0FBRztZQUNmLFFBQVEsRUFBRSwwQkFBMEI7WUFDcEMsVUFBVSxFQUFFLENBQUM7WUFDYixNQUFNLEVBQUUsTUFBTTtTQUNqQjtLQUNKLENBQUMsQ0FBQztJQUVILDRDQUE0QztJQUM1QyxNQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsWUFBWSxFQUFFO1FBQ25DLEVBQUUsRUFBRSxvQkFBb0I7UUFDeEIsR0FBRyxFQUFFO1lBQ0QsUUFBUSxFQUFFLENBQUM7WUFDWCxNQUFNLEVBQUUsTUFBTTtZQUNkLGVBQWUsRUFBRSxhQUFhO1NBQ2pDO0tBQ0osQ0FBQyxDQUFDO0lBRUgseUJBQXlCO0lBQ3pCLElBQUksQ0FBQyxjQUFjO1FBQUUsT0FBTyxDQUFDLGFBQWE7SUFDMUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDOUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUV4QywyQ0FBMkM7SUFDM0MsUUFBUSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQXNCLENBQUM7SUFDM0MsSUFBSSxRQUFRLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDekIsUUFBUSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDdkMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLHVFQUFXLENBQUMsQ0FBQztRQUNuRCxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUN4QyxPQUFPLENBQUMsR0FBRyxDQUFDLGlEQUFpRCxDQUFDLENBQUM7SUFDbkUsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YXZlcm5faGVscGVyX3RlbXBsYXRlLy4vc3JjL2FkdmFuY2VkLXN0YXR1cy1waG9uZS12Mi91aS91aS1tYW5hZ2VyLnRzPyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyB1aS1tYW5hZ2VyLnRzXHJcbi8vIHYyLjEgXCJCcm93c2VyLVBhZ2VcIiBBcmNoaXRlY3R1cmVcclxuLy8gVGhpcyBtYW5hZ2VyIGNyZWF0ZXMgdGhlIG1haW4gVUkgXCJmcmFtZVwiICh0aGUgYnJvd3NlcikgYW5kIGFuIGlmcmFtZSBmb3IgdGhlIFwicGFnZVwiIGNvbnRlbnQuXHJcblxyXG5pbXBvcnQgeyBQUkVTRVRfSFRNTCB9IGZyb20gJy4uL3ByZXNldC9kZWZhdWx0L2RlZmF1bHQtcHJlc2V0JztcclxuaW1wb3J0IHsgQ2hhcmFjdGVyc0RhdGEsIFByZXNldFN0cnVjdHVyZSB9IGZyb20gJy4uL2RhdGEvc3RhdHVzLW1vZGVsJztcclxuXHJcbmNvbnN0IHBhcmVudF8kID0gKHBhcmVudCBhcyBhbnkpLiQ7XHJcbmxldCB1aUlmcmFtZTogSFRNTElGcmFtZUVsZW1lbnQgfCBudWxsID0gbnVsbDtcclxubGV0IHBob25lQ29udGFpbmVyOiBKUXVlcnk8SFRNTEVsZW1lbnQ+IHwgbnVsbCA9IG51bGw7XHJcblxyXG4vKipcclxuICogSW5qZWN0cyB0aGUgbWFpbiBVSSBmcmFtZSBhbmQgdGhlIGNvbnRlbnQgaWZyYW1lLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGluamVjdFVJKCk6IHZvaWQge1xyXG4gICAgaWYgKHBhcmVudF8kKCcjc3NwLXBob25lLWNvbnRhaW5lcicpLmxlbmd0aCA+IDApIHtcclxuICAgICAgICByZXR1cm47IC8vIFVJIGFscmVhZHkgZXhpc3RzXHJcbiAgICB9XHJcblxyXG4gICAgLy8gSW5qZWN0IHN0eWxlcyBmb3IgdGhlIGZyYW1lIGVsZW1lbnRzIGlmIHRoZXkgZG9uJ3QgZXhpc3RcclxuICAgIGlmIChwYXJlbnRfJCgnI3NzcC1mcmFtZS1zdHlsZXMnKS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICBjb25zdCBmcmFtZVN0eWxlcyA9IGBcclxuICAgICAgICAgICAgI3NzcC1taW5pbWl6ZS1idG4ge1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogNnB4IDhweDtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlO1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDE7XHJcbiAgICAgICAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcclxuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAjc3NwLW1pbmltaXplLWJ0bjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMjUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgYDtcclxuICAgICAgICBwYXJlbnRfJCgnaGVhZCcpLmFwcGVuZChgPHN0eWxlIGlkPVwic3NwLWZyYW1lLXN0eWxlc1wiPiR7ZnJhbWVTdHlsZXN9PC9zdHlsZT5gKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyAxLiBDcmVhdGUgdGhlIG1haW4gcGhvbmUgY29udGFpbmVyIChcIlRoZSBCcm93c2VyXCIpXHJcbiAgICBwaG9uZUNvbnRhaW5lciA9IHBhcmVudF8kKCc8ZGl2IC8+Jywge1xyXG4gICAgICAgIGlkOiAnc3NwLXBob25lLWNvbnRhaW5lcicsXHJcbiAgICAgICAgY3NzOiB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxyXG4gICAgICAgICAgICB0b3A6ICc2MHB4JyxcclxuICAgICAgICAgICAgbGVmdDogJzIwcHgnLFxyXG4gICAgICAgICAgICB6SW5kZXg6IDk1MCxcclxuICAgICAgICAgICAgd2lkdGg6ICdtaW4oMzc1cHgsIDg1dncpJyxcclxuICAgICAgICAgICAgYXNwZWN0UmF0aW86ICc5IC8gMTcnLFxyXG4gICAgICAgICAgICBtYXhXaWR0aDogJzM5MHB4JyxcclxuICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiAnMjBweCcsXHJcbiAgICAgICAgICAgIGJveFNoYWRvdzogJzAgOHB4IDI0cHggcmdiYSgwLDAsMCwwLjE1KSwgMCAycHggOHB4IHJnYmEoMCwwLDAsMC4xKScsXHJcbiAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmMGYwZjUnLFxyXG4gICAgICAgICAgICBib3JkZXI6ICcxcHggc29saWQgI2RjZGNlMCcsXHJcbiAgICAgICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcclxuICAgICAgICAgICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbicsXHJcbiAgICAgICAgICAgIGZvbnRGYW1pbHk6IFwiLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBSb2JvdG8sICdIZWx2ZXRpY2EgTmV1ZScsIEFyaWFsLCBzYW5zLXNlcmlmXCIsXHJcbiAgICAgICAgICAgIG92ZXJmbG93OiAnaGlkZGVuJ1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIDIuIENyZWF0ZSB0aGUgZHJhZ2dhYmxlIHRvcCBiYXJcclxuICAgIGNvbnN0IHRvcEJhciA9IHBhcmVudF8kKCc8ZGl2IC8+Jywge1xyXG4gICAgICAgIGlkOiAnc3NwLXRvcC1iYXInLFxyXG4gICAgICAgIGh0bWw6ICc8c3BhbiBpZD1cInNzcC10aXRsZVwiPueKtuaAgemdouadvzwvc3Bhbj48ZGl2IGNsYXNzPVwic3NwLXRvcC1yaWdodC1pY29uc1wiPjxzcGFuIGlkPVwic3NwLW1pbmltaXplLWJ0blwiIHRpdGxlPVwi5pyA5bCP5YyWXCIgY2xhc3M9XCJzc3AtY2xpY2thYmxlXCI+77yNPC9zcGFuPjwvZGl2PicsXHJcbiAgICAgICAgY3NzOiB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICdsaW5lYXItZ3JhZGllbnQoMTM1ZGVnLCAjNmFiMWQ3LCAjMDA5NWUwKScsXHJcbiAgICAgICAgICAgIGhlaWdodDogJzQ0cHgnLFxyXG4gICAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXHJcbiAgICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxyXG4gICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxyXG4gICAgICAgICAgICBwYWRkaW5nOiAnMCAxNnB4JyxcclxuICAgICAgICAgICAgY29sb3I6ICd3aGl0ZScsXHJcbiAgICAgICAgICAgIGZvbnRXZWlnaHQ6IDYwMCxcclxuICAgICAgICAgICAgZm9udFNpemU6ICdjbGFtcCgxNHB4LCAzLjh2dywgMTZweCknLFxyXG4gICAgICAgICAgICBmbGV4U2hyaW5rOiAwLFxyXG4gICAgICAgICAgICBjdXJzb3I6ICdtb3ZlJ1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIDMuIENyZWF0ZSB0aGUgY29udGVudCBpZnJhbWUgKFwiVGhlIFBhZ2VcIilcclxuICAgIGNvbnN0ICRpZnJhbWUgPSBwYXJlbnRfJCgnPGlmcmFtZSAvPicsIHtcclxuICAgICAgICBpZDogJ3NzcC1jb250ZW50LWlmcmFtZScsXHJcbiAgICAgICAgY3NzOiB7XHJcbiAgICAgICAgICAgIGZsZXhHcm93OiAxLFxyXG4gICAgICAgICAgICBib3JkZXI6ICdub25lJyxcclxuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnXHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gNC4gQXNzZW1ibGUgYW5kIGluamVjdFxyXG4gICAgaWYgKCFwaG9uZUNvbnRhaW5lcikgcmV0dXJuOyAvLyBUeXBlIGd1YXJkXHJcbiAgICBwaG9uZUNvbnRhaW5lci5hcHBlbmQodG9wQmFyKS5hcHBlbmQoJGlmcmFtZSk7XHJcbiAgICBwYXJlbnRfJCgnYm9keScpLmFwcGVuZChwaG9uZUNvbnRhaW5lcik7XHJcblxyXG4gICAgLy8gNS4gTG9hZCB0aGUgcGFnZSBjb250ZW50IGludG8gdGhlIGlmcmFtZVxyXG4gICAgdWlJZnJhbWUgPSAkaWZyYW1lWzBdIGFzIEhUTUxJRnJhbWVFbGVtZW50O1xyXG4gICAgaWYgKHVpSWZyYW1lLmNvbnRlbnRXaW5kb3cpIHtcclxuICAgICAgICB1aUlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50Lm9wZW4oKTtcclxuICAgICAgICB1aUlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50LndyaXRlKFBSRVNFVF9IVE1MKTtcclxuICAgICAgICB1aUlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50LmNsb3NlKCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ+mrmOe6p+eKtuaAgeagjyAoVUkgTWFuYWdlcik6IFVJIEZyYW1lIGFuZCBQYWdlIGluamVjdGVkLicpO1xyXG4gICAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/advanced-status-phone-v2/ui/ui-manager.ts\n")}},__webpack_module_cache__={};function __webpack_require__(F){var Q=__webpack_module_cache__[F];if(void 0!==Q)return Q.exports;var U=__webpack_module_cache__[F]={exports:{}};return __webpack_modules__[F](U,U.exports,__webpack_require__),U.exports}__webpack_require__.d=(F,Q)=>{for(var U in Q)__webpack_require__.o(Q,U)&&!__webpack_require__.o(F,U)&&Object.defineProperty(F,U,{enumerable:!0,get:Q[U]})},__webpack_require__.o=(F,Q)=>Object.prototype.hasOwnProperty.call(F,Q),__webpack_require__.r=F=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(F,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(F,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./src/advanced-status-phone-v2/index.ts");